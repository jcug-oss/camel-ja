# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-05-18 09:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:1
#, no-wrap
msgid "New Camel K Logging Features"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:14
#, no-wrap
msgid ""
"As part of our continuous work to improve Camel K and improve its stability, features and\n"
"usefulness to our community, we recently worked on logging improvements for different\n"
"parts of Camel K and the integrations it generated.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:17
#, no-wrap
msgid ""
"During the 1.5 development release we dedicated some time to review the logging capabilities\n"
"of Camel K. This version introduces a new [logging trait](/camel-k/latest/traits/logging.html) that simplifies access to the logging configuration available on the runtime.\n"
msgstr ""

#. type: Title ##
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:18
#, no-wrap
msgid "Colorized logs"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:24
#, no-wrap
msgid ""
"By default, Camel K will colorize the log output, making it easier to distinguish between\n"
"log levels, loggers, timestamps and the logging message. Naturally, we understand that not\n"
"everyone likes colorized logs. As such it's possible to disable it by using the `logging.color`\n"
"trait option.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:26
#, no-wrap
msgid "This is what it looks like:\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:28
#, no-wrap
msgid "![Colorized Camel K Logs](colorized-camel-k-logs.png)\n"
msgstr ""

#. type: Title ##
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:30
#, no-wrap
msgid "Easier support for additional debug levels"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:35
#, no-wrap
msgid ""
"Additional log levels can be turned on or off at ease, using the `logging.level` trait. Users\n"
"can inform the minimum log level (i.e.: `TRACE`, `DEBUG`, `INFO`, etc) and control how much\n"
"information is presented by the logger.\n"
msgstr ""

#. type: Title ##
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:37
#, no-wrap
msgid "Custom logging format"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:42
#, no-wrap
msgid ""
"Leveraging the previous features, it's also possible to control the format of the\n"
"displayed message. The `logging.format` trait provides the ability to control what fields\n"
"will be logged, their formats and their orders.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:46
#, no-wrap
msgid ""
"For example, you can customize the log message so that it displays the hour, the log level,\n"
"the thread name, the message, the exception information, finished with a new line. To do so,\n"
"you can use the following to set the logging format:\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:48
#, no-wrap
msgid "`--trait logging.format='%d{HH:mm:ss} %-5p (%t) %s%e%n'`.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:50
#, no-wrap
msgid "This would result in log messages similar to these:\n"
msgstr ""

#. type: Fenced code block
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:51
#, no-wrap
msgid ""
"[1] 11:21:59 INFO  (main) Apache Camel 3.9.0 (camel-1) started in 74ms (build:0ms init:58ms start:16ms)\n"
"[1] 11:21:59 INFO  (main) camel-k-integration 1.5.0-SNAPSHOT on JVM (powered by Quarkus 1.13.0.Final) started in 1.362s.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:59
#, no-wrap
msgid ""
"Since the runtime leverages Camel Quarkus and, by extension, Quarkus itself, all the\n"
"[logging format symbols](https://quarkus.io/guides/logging) suported by Quarkus can be used\n"
"to customize the integration logs.\n"
msgstr ""

#. type: Title ##
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:60
#, no-wrap
msgid "Logging in JSON format"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:67
#, no-wrap
msgid ""
"Although log colorization is a nice improvement to the usability of Camel K in development\n"
"mode, most users will eventually run the integrations in production. In such scenarios, it's\n"
"not uncommon to use tools such as FluentD or Logstash to consume the logs and run all sorts\n"
"of processing on top of them. Structured logging, in JSON format, makes it possible to reuse\n"
"plugins available in those tools and may simplify the job of processing them.\n"
msgstr ""

#. type: Fenced code block
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:68
#, no-wrap
msgid "{\"timestamp\":\"2021-05-10T11:28:26.99Z\",\"sequence\":99,\"loggerClassName\":\"org.jboss.logging.Logger\",\"loggerName\":\"io.quarkus\",\"level\":\"INFO\",\"message\":\"Installed features: [camel-bean, camel-core, camel-java-joor-dsl, camel-k-core, camel-k-runtime, camel-log, camel-support-common, camel-timer, cdi]\",\"threadName\":\"main\",\"threadId\":1,\"mdc\":{},\"ndc\":\"\",\"hostName\":\"basic-5b57bcf589-kbzvp\",\"processName\":\"io.quarkus.bootstrap.runner.QuarkusEntryPoint\",\"processId\":1}\n"
msgstr ""

#. type: Title ##
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:73
#, no-wrap
msgid "Maven Build Logs"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:79
#, no-wrap
msgid ""
"Lastly, we also modified the Camel K operator itself so that we normalize the log format of\n"
"the integration's build messages. Previously, our build would output unstructured log\n"
"messages for the build process, which would make it more complicated to parse and process\n"
"the messages for build errors.\n"
msgstr ""

#. type: Fenced code block
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:81
#, no-wrap
msgid "{\"level\":\"info\",\"ts\":1620393185.321101,\"logger\":\"camel-k.maven.build\",\"msg\":\"Downloading from repository-000: http://my.repository.com:8081/artifactory/fuse-brno/org/jboss/shrinkwrap/resolver/shrinkwrap-resolver-bom/2.2.4/shrinkwrap-resolver-bom-2.2.4.pom\"}\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:88
#, no-wrap
msgid ""
"All in all, these set of small logging improvements aim to make Camel K friendlier for the\n"
"developer and more flexible for different monitoring use cases, eventually simplifying\n"
"running integrations in an autonomous way.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2021/05/new-camel-k-logging-features/index.md:91
#, no-wrap
msgid ""
"Do you have any suggestions about how we could improve usability and make Camel K operate\n"
"even more autonomously? [Let us know](https://github.com/apache/camel-k/issues).\n"
msgstr ""
