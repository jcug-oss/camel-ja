# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-05-18 09:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: preview
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:1
#, no-wrap
msgid "Details of what we have done in the Camel 3.7 release."
msgstr ""

#. type: YAML Front Matter: title
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:1
#, no-wrap
msgid "Apache Camel 3.7 What's New"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:10
#, no-wrap
msgid "Apache Camel 3.7 LTS has just been released.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:13
#, no-wrap
msgid ""
"This is a LTS release which means we will provide patch releases for one year. The next planned LTS release is 3.10\n"
"scheduled towards summer 2021.\n"
msgstr ""

#. type: Title ##
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:14
#, no-wrap
msgid "So what's in this release"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:17
#, no-wrap
msgid "This release introduces a set of new features and noticeable improvements that we will cover in this blog post.\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:18
#, no-wrap
msgid "Pre compiled languages"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:22
#, no-wrap
msgid ""
"We continued our avenue of making Camel faster and smaller. This time we focused on the built-in Simple scripting\n"
"language.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:26
#, no-wrap
msgid ""
"First we added the [jOOR language](/components/latest/languages/joor-language.html). jOOR is a small Java tool for\n"
"performing runtime compilation of Java source code in-memory. It has some limitations but generally works well for small\n"
"scripting code (requires Java 11 onwards).\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:28
#, no-wrap
msgid "Then we worked on compiled simple.\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:29
#, no-wrap
msgid "Compiled Simple"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:34
#, no-wrap
msgid ""
"The [csimple language](/components/latest/languages/csimple-language.html)\n"
"is parsed into regular Java source code and compiled together with all the other source code, or compiled once during\n"
"bootstrap via jOOR.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:36
#, no-wrap
msgid "{{< image \"csimple-compiled.png\" \"Compiled Simple Language\" >}}\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:39
#, no-wrap
msgid ""
"In a nutshell, compiled simple language excels over simple language when using dynamic Object-Graph Navigation\n"
"Language (OGNL) method calls.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:41
#, no-wrap
msgid "For example profiling the following simple expression\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:43
#, no-wrap
msgid "    <simple>${exchangeProperty.user.getName} != null && ${exchangeProperty.user.getAge} > 11</simple>\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:45
#, no-wrap
msgid "with the equivalent csimple expression:\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:49
#, no-wrap
msgid ""
"    <csimple>${exchangeProperty.user} != null &&\n"
"             ${exchangeProperty.user.getName()} != null &&\n"
"             ${exchangeProperty.user.getAge()} > 11</csimple>\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:51
#, no-wrap
msgid "yields a dramatic 100 times performance improvement in reduced cpu usage as shown in the screenshot:\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:53
#, no-wrap
msgid "{{< image \"simple-csimple-performance.png\" \"Simple vs Compiled Simple\" >}}\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:56
#, no-wrap
msgid ""
"For more information about the compiled simple language and further break down of performance improvements then\n"
"read [Claus blog post](http://www.davsclaus.com/2020/12/apache-camel-37-compiled-simple.html).\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:59
#, no-wrap
msgid ""
"We have provided two small examples that demonstrate `csimple` as pre compiled and as runtime compiled during bootstrap.\n"
"You can find these two examples from the official Apache Camel examples repository at:\n"
msgstr ""

#. type: Bullet: '- '
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:62
#, no-wrap
msgid "[csimple pre compiled example](https://github.com/apache/camel-examples/tree/master/examples/camel-example-csimple)\n"
msgstr ""

#. type: Bullet: '- '
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:62
#, no-wrap
msgid "[csimple runtime compiled example](https://github.com/apache/camel-examples/tree/master/examples/camel-example-csimple-joor)\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:63
#, no-wrap
msgid "Optimized core"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:68
#, no-wrap
msgid ""
"We have continued the effort to optimize camel-core. This time a number of smaller improvements in various areas such as\n"
"replacing regular expressions with regular Java code when regular expressions were overkill\n"
"(regexp take up sizeable heap memory).\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:70
#, no-wrap
msgid "The direct component has been enhanced to avoid synchronization when the producer calls the consumer.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:73
#, no-wrap
msgid ""
"We also enhanced the internals of the event notifier separating startup/stop events from routing events, gaining a small\n"
"performance improvement during routing.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:75
#, no-wrap
msgid "We also reduced the number of objects used during routing which reduced the memory usage.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:79
#, no-wrap
msgid ""
"Another significant win was to bulk together all the type converters from the core, into two classes (source generated).\n"
"This avoids registering individually each type converter into the type converter registry which saves 20kb of heap\n"
"memory.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:82
#, no-wrap
msgid ""
"If you are more curious about how we did these optimizations and with some performance numbers,\n"
"then [Claus wrote a blog post](http://www.davsclaus.com/2020/11/apache-camel-37-more-camel-core.html).\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:83
#, no-wrap
msgid "Optimized components startup"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:88
#, no-wrap
msgid ""
"The camel core has been optimized in Camel 3 to be small, slim, and fast on startup. This benefits\n"
"[Camel Quarkus](/camel-quarkus/latest/) which can do built time optimizations that take advantage of the optimized camel\n"
"core.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:92
#, no-wrap
msgid ""
"We have continued this effort in the Camel components where whenever possible initialization is moved ahead to an\n"
"earlier phase during startup, that allows enhanced built time optimizations. As there are a lot of Camel components then\n"
"this work will progress over the next couple of Camel releases.\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:93
#, no-wrap
msgid "Separating Model and EIP processors"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:96
#, no-wrap
msgid "In this release we untangled model, reifier and processors.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:98
#, no-wrap
msgid "This is a great achievement which allows us to take this even further with design time vs runtime.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:101
#, no-wrap
msgid ""
"    Model    ->    Reifier   ->   Processor\n"
"    (startup)      (startup)      (runtime)\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:105
#, no-wrap
msgid ""
"The model is the structure of the DSL which you can think of as _design time_ specifying your Camel routes. The model is\n"
"executed once during startup and via the reifier (factory) the runtime EIP processors is created. After this work is\n"
"done, the model is essentially not needed anymore.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:109
#, no-wrap
msgid ""
"By separating this into different JARs (camel-core-model, camel-core-reifier, camel-core-processor) then we ensure they\n"
"are separated and this allows us to better do built time optimizations and dead code elimination\n"
"via [Quarkus](https://quarkus.io/) and/or GraalVM.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:111
#, no-wrap
msgid "This brings up to lightweight mode.\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:112
#, no-wrap
msgid "Lightweight mode"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:116
#, no-wrap
msgid ""
"We started an experiment earlier with a lightweight mode. With the separation of the model from the processors, then we\n"
"have a great step forward, which allowed us to make the lightweight mode available for end users to turn on.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:119
#, no-wrap
msgid ""
"In lightweight mode Camel removes all references to the model after startup which causes the JVM to be able to garbage\n"
"collect all model objects and unload classes, freeing up memory.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:122
#, no-wrap
msgid ""
"After this it's no longer possible to dynamically add new Camel routes. The lightweight mode is intended for\n"
"microservice/serverless architectures, with a _closed world_ assumption.\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:123
#, no-wrap
msgid "Autowiring components"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:128
#, no-wrap
msgid ""
"The Camel components is now capable of autowiring by type. For example\n"
"the [AWS2 SQS](/components/latest/aws2-sqs-component.html) components can automatically lookup in the registry if there is\n"
"a single instance of `SqsClient`, and then pre configure itself.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:131
#, no-wrap
msgid ""
"We have marked up in the Camel documentation which component options supports this by showing *Autowired* in bold in the\n"
"description.\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:132
#, no-wrap
msgid "Salesforce fixes"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:136
#, no-wrap
msgid ""
"Our recent Camel committer [Jeremy Ross](https://github.com/jeremyross) did great work to improve and fix bugs in\n"
"the [camel-salesforce component](/components/latest/salesforce-component.html). We expect more to come from him.\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:137
#, no-wrap
msgid "VertX Kafka Component"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:141
#, no-wrap
msgid ""
"A new Kafka component has been developed that uses the Vert.X Kafka Java Client which allows us to use all of its\n"
"features, and also its robustness and stability.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:144
#, no-wrap
msgid ""
"The [camel-vertx-kafka](/components/latest/vertx-kafka-component.html) component is intended to be (more) feature\n"
"complete with the existing camel-kafka component. We will continue this work for the next couple of Camel releases.\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:145
#, no-wrap
msgid "DataSonnet"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:149
#, no-wrap
msgid ""
"The new [camel-datasonnet](/components/latest/languages/datasonnet-language.html) component, is to be used for data\n"
"transformation using the [DataSonnet](https://datasonnet.com/) standard.\n"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:152
#, no-wrap
msgid ""
"DataSonnet is an open source JSON-centric, template-based data transformation standard built to rival proprietary\n"
"options available in the market.\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:153
#, no-wrap
msgid "Spring Boot"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:156
#, no-wrap
msgid "We have upgraded to Spring Boot 2.4.\n"
msgstr ""

#. type: Title ###
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:157
#, no-wrap
msgid "New components"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:160
#, no-wrap
msgid "This release has a number of new components, data formats and languages:\n"
msgstr ""

#. type: Bullet: '- '
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:169
#, no-wrap
msgid ""
"[AtlasMap](/components/latest/atlasmap-component.html): Transforms the message using\n"
"an [AtlasMap](https://www.atlasmap.io/) transformation\n"
msgstr ""

#. type: Bullet: '- '
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:169
#, no-wrap
msgid "Kubernetes Custom Resources: Perform operations on Kubernetes Custom Resources and get notified on Deployment changes\n"
msgstr ""

#. type: Bullet: '- '
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:169
#, no-wrap
msgid "Vert.X Kafka: Sent and receive messages to/from an Apache Kafka broker using vert.x Kafka client\n"
msgstr ""

#. type: Bullet: '- '
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:169
#, no-wrap
msgid "JSON JSON-B: Marshal POJOs to JSON and back using JSON-B\n"
msgstr ""

#. type: Bullet: '- '
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:169
#, no-wrap
msgid "CSimple: Evaluate a compile simple expression language\n"
msgstr ""

#. type: Bullet: '- '
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:169
#, no-wrap
msgid "DataSonnet: To use DataSonnet scripts in Camel expressions or predicates\n"
msgstr ""

#. type: Bullet: '- '
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:169
#, no-wrap
msgid "jOOR: Evaluate a jOOR (Java compiled once at runtime) expression language\n"
msgstr ""

#. type: Title ##
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:170
#, no-wrap
msgid "Upgrading"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:174
#, no-wrap
msgid ""
"Make sure to read the [upgrade guide](/manual/latest/camel-3x-upgrade-guide-3_7.html) if you are upgrading to this\n"
"release from a previous Camel version.\n"
msgstr ""

#. type: Title ##
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:175
#, no-wrap
msgid "More details"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:180
#, no-wrap
msgid ""
"The previous LTS release was Camel 3.4. We have blog posts for what's new in\n"
"[Camel 3.5](/blog/2020/10/Camel36-Whatsnew/) and\n"
"[Camel 3.6](/blog/2020/09/Camel35-Whatsnew/) you may want to read to cover all news between the two LTS releases.\n"
msgstr ""

#. type: Title ##
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:181
#, no-wrap
msgid "Release Notes"
msgstr ""

#. type: Plain text
#: upstream/content/blog/2020/12/Camel37-Whatsnew/index.md:183
#, no-wrap
msgid "You can find more information about this release in the [release notes](/releases/release-3.7.0/), with a list of JIRA tickets resolved in the release.\n"
msgstr ""
