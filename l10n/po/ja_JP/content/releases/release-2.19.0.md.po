# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-05-18 09:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: preview
#: upstream/content/releases/release-2.19.0.md:1
#, fuzzy, no-wrap
msgid "Major release for 2.19.x"
msgstr "2.19.xのメジャーリリース"

#. type: YAML Front Matter: title
#: upstream/content/releases/release-2.19.0.md:1
#, fuzzy, no-wrap
msgid "Release 2.19.0"
msgstr "リリース 2.19.0"

#. type: Plain text
#: upstream/content/releases/release-2.19.0.md:17
#, fuzzy, no-wrap
msgid ""
"Welcome to the 2.19.0 release which resolved over 670 issues including\n"
"new features, improvements and bug fixes.\n"
msgstr ""
"670件以上の問題を解決した2.19.0のリリースにようこそ。\n"
"新機能、改善、バグフィックスを含む670以上の問題を解決した\n"

#. type: Plain text
#: upstream/content/releases/release-2.19.0.md:133
#, fuzzy, no-wrap
msgid ""
"* Introduced\n"
"Camel Connector's which is a simplified version of a Camel component that has\n"
"been pre-configured for a specific use-case.\n"
"* Upgraded to Spring Boot 1.5.x.\n"
"* The Camel Maven Plugin now provides the\n"
"`camel:validate` goal to parse your Java and XML source code for any\n"
"Camel routes and report invalid Camel endpoint uri and simple expression\n"
"errors. You can run this at code time (not runtime). \n"
"* Camel `Main` and Spring Boot\n"
"and Camel Maven Plugin can now auto\n"
"terminate the JVM after Camel has been running for maximum duration of\n"
"seconds, processed messages or been idle for a period.\n"
"* Camel source code can build with Java 9 in preparation for official\n"
"support for Java 9 in a future release\n"
"* All the Camel Spring Boot starter components now has more of the\n"
"components default values included in their metadata which allows\n"
"tooling to display such information\n"
"* Deprecated more components and camel-core APIs that will be dropped in\n"
"Camel 3.0 or sometime in the future\n"
"* Introduced `ReloadStrategy` as SPI which allows custom providers to\n"
"implement logic for triggering live reloads of Camel routes.\n"
"* The Camel Maven Plugin now allows to\n"
"live reload route changes from XML files when running Camel. This can\n"
"also be enabled from the `Main` class.\n"
"* Introduced a new `camel-catalog-rest` artifact which is a tiny\n"
"standalone REST API of the CamelCatalog using JAX-RS and Swagger\n"
"Annotations.\n"
"* Added `camel-catalog-rest-app` as a standalone application which used\n"
"Apache CXF with Jetty to host the Catalog REST API with embedded Swagger\n"
"UI\n"
"* Returning `null` from Bean should work similar to\n"
"how `setBody` and `transform` works when they set a `null` body.\n"
"* The Camel Spring Boot starter components now have their auto\n"
"configuration depends\n"
"on `org.apache.camel.springboot.CamelAutoConfiguration` which makes it\n"
"easier writing unit tests where you can\n"
"exclude `org.apache.camel.springboot.CamelAutoConfiguration` to turn off\n"
"Camel Spring Boot auto configuration completely.\n"
"* Camel now supports OWASP dependency check maven plugin\n"
"* NATS component now supports TLS and explicit flushing\n"
"(with timeout) of the connection\n"
"* Metrics component\n"
"now supports Gauge type\n"
"* File consumer now supports idempotent-changed and\n"
"idempotent-rename read lock strategies for clustering. \n"
"* Camel Catalog now supports custom runtime providers that only includes\n"
"the supported Camel components, languages and data formats running in\n"
"that container. For example for Karaf or Spring Boot in the\n"
"camel-catalog-provider-karaf and camel-catalog-provider-springboot.\n"
"* The bean\n"
"component will when calling a method that returned an instance of\n"
"`Callable` now call that callable to obtain the chained result. This\n"
"allows to call Groovy functions/closures etc.\n"
"* Failover Load Balancer with\n"
"inheritErrorHandler=false, now allows\n"
"Error Handler to react after the load\n"
"balancer is exhausted.\n"
"* Salesforce component now supports limits, recent\n"
"items, approvals and composite API\n"
"* Dumping Camel routes as XML now includes custom namespaces which are\n"
"at xpath expressions etc. Likewise updating Camel routes from XML can\n"
"now include namespaces which will be associated on xpath expressions.\n"
"* Added `RouteIdFactory` which can auto assign route ids based on the\n"
"consumer endpoints to use more sensitible names, instead of route1,\n"
"route2, etc.\n"
"* Add `skip` function to Simple language\n"
"* Upgraded to Jetty 9.3 (Jetty 9.2 still supported for Karaf 4.0.x\n"
"users)\n"
"* `RouteBuilder` auto-configuration can now be disabled\n"
"from Camel CDI configuration\n"
"* Camel contexts automatic start can now be disabled\n"
"from Camel CDI configuration\n"
"* Camel CDI now provides support\n"
"for `TransactionErrorHandler` and `TransactionPolicy` via JTA\n"
"* Asynchronous support for CXF JAX-RS producers has\n"
"been added\n"
"* The JSonPath language now supports Map and List\n"
"types and POJOs as well. For POJOs you need to have Jackson on the\n"
"classpath. \n"
"* Data Format which marshal to JSon or XML now\n"
"set the content-type header to application/json or application/xml\n"
"appropriately. \n"
"* The Kafka component can now store offset state\n"
"offline (stateRepository) to preserve this information and be able to\n"
"resume from previous offset.\n"
"* The Kafka component has been improved to be easier to\n"
"configure and use. Notice there is a backwards incompatible change so\n"
"users need to migrate.\n"
"* A topic based idempotent repository that\n"
"is Kafka based for\n"
"the Idempotent Consumer EIP\n"
"* The Kafka component will automatic type convert the\n"
"message body to the type specified by the configured serializer (is\n"
"string by default) when sending to kafka. You can also now configure key\n"
"and partitionKey in the endpoint uri, instead of having to specify as\n"
"headers.\n"
"* The Kafka consumer will now auto commit on stop to\n"
"ensure the broker has the latest offset commit. The\n"
"option `autoCommitOnStop` can be configured to be sync,async or none.\n"
"* Added easy predicate parser to JSonPath to more\n"
"easily define simple predicates without using the more complex jsonpath\n"
"notation with all the symbols\n"
"* The Box component has been migrated to use the Box v2\n"
"Java API as the old v1 API is going to be shutdown from summer 2017\n"
"* Examples overview now generate from the source code to ensure its up\n"
"to date\n"
"* Added declarative Transformer \n"
"and Validator\n"
"which performs transformation/validation according to the data type\n"
"information declared on a route by\n"
"inputType and/or outputType.\n"
"There're a few examples demonstrates this feature:\n"
"camel-example-transformer-blueprint, camel-example-transformer-cdi, camel-example-transformer-demo,\n"
"and camel-example-validator-spring-boot\n"
"* Added query support for JPA Producer\n"
msgstr ""
"導入した製品\n"
"Camel Connector'sは、特定のユースケースのためにあらかじめ設定されたCamelコンポーネントの簡易版です。\n"
"Camel Connector'sを導入しました。これは、特定のユースケースのためにあらかじめ設定されたCamelコンポーネントの簡易版です。\n"
"* Spring Boot 1.5.xにアップグレードされました。\n"
"Camel Maven プラグインが、`camel:validate` ゴールを提供するようになりました。\n"
"Camel Maven プラグインでは、Java や XML のソースコードを解析して\n"
"Camel のルートを解析し、無効な Camel のエンドポイントの URI や単純な式の\n"
"エラーを報告します。これはランタイムではなく、コードタイムに実行することができます。 \n"
"* Camel `Main` と Spring Boot\n"
"とCamel Maven Pluginは、Camelが終了した後、JVMを自動\n"
"Camel `Main` と Spring Boot と Camel Maven Plugin は、Camel が最大で何秒も実行された後、JVM を自動的に終了するようになりました。\n"
"* Camel `Main` と Spring Boot および Camel Maven Plugin は、Camel が最大で 1 秒間実行された後、メッセージが処理された後、または一定時間アイドル状態になった後、JVM を自動的に終了するようになりました。\n"
"Camelのソースコードは、将来のリリースでのJava 9の公式サポートに備えて、Java 9でビルドできるようになりました。\n"
"CamelのソースコードはJava 9でビルドできます。\n"
"すべてのCamel Spring Bootスターターコンポーネントのメタデータに、コンポーネントのデフォルト値が含まれるようになりました。\n"
"コンポーネントのデフォルト値がメタデータに含まれるようになりました。\n"
"ツールでそのような情報を表示できるようになりました。\n"
"Camel 3.0で廃止される予定のコンポーネントやcamel-core APIを廃止しました。\n"
"Camel 3.0または将来的に廃止される予定のコンポーネントやキャメルコアAPIを廃止しました。\n"
"SPIとして`ReloadStrategy`を導入し、カスタムプロバイダがライブリロードをトリガーするロジックを実装できるようになりました。\n"
"カスタムプロバイダが Camel ルートのライブリロードをトリガーするロジックを実装できる SPI として `ReloadStrategy` を導入しました。\n"
"Camel Maven プラグインでは、以下が可能になりました。\n"
"CamelのMavenプラグインでは、Camelの実行時にXMLファイルからルートの変更をライブリロードできるようになりました。この機能は\n"
"Main`クラスからも有効にできます。\n"
"* 新しい `camel-catalog-rest` アーティファクトを導入しました。\n"
"JAX-RSとSwaggerアノテーションを使ったCamelCatalogの小さなスタンドアロンREST APIです。\n"
"アノテーションです。\n"
"これはJAX-RSとSwagger Annotationsを使ったCamelCatalogの小さなスタンドアロンのREST APIです。\n"
"カタログREST APIをホストするスタンドアロンアプリケーションとして、`camel-catalog-rest-app`を追加しました。\n"
"UI\n"
"* ビーンから `null` を返すことは、`setBody` や `setBody` と同様に動作する。\n"
"Beanから`null`を返すことは、`setBody`や`transform`が`null`のボディをセットしたときにどのように動作するかに似ています。\n"
"* Camel の Spring Boot スターターコンポーネントは、自動\n"
"設定は\n"
"これにより、ユニットテストを簡単に書くことができます。\n"
"これにより、ユニットテストを簡単に書くことができます。\n"
"ユニットテストを書きやすくなります。\n"
"Camel Spring Bootの自動設定を完全にオフにすることができます。\n"
"Camel は OWASP dependency check maven plugin をサポートしました。\n"
"* NATSコンポーネントは、TLSと、接続の明示的なフラッシュ（タイムアウトあり）をサポートしました。\n"
"(タイムアウトあり)をサポートしました。\n"
"* メトリクスコンポーネント\n"
"ゲージタイプをサポートしました。\n"
"ファイルコンシューマーが idempotent-changed および\n"
"idempotent-changed および idempotent-rename の読み取りロック戦略をサポートしました。 \n"
"Camel カタログは、サポートされている Camel コンポーネント、言語、およびその他のコンポーネントのみを含むカスタム ランタイム プロバイダをサポートします。\n"
"サポートされているCamelコンポーネント、言語、データフォーマットを\n"
"カスタムランタイムプロバイダをサポートするようになりました。例えば、KarafやSpring Bootのための\n"
"camel-catalog-provider-karafとcamel-catalog-provider-springbootでは、KarafやSpring Bootに対応しています。\n"
"* ビーン\n"
"コンポーネントは、`Callable`のインスタンスを返したメソッドを呼び出すと、そのメソッドを呼び出すようになります。\n"
"Callable`のインスタンスを返したメソッドを呼び出したときに、そのCallableを呼び出して連鎖した結果を得るようになります。これにより\n"
"Groovyの関数やクロージャなどを呼び出すことができます。\n"
"フェイルオーバーロードバランサーと\n"
"inheritErrorHandler=falseを設定したフェイルオーバー・ロードバランサーでは\n"
"ロードバランサーが疲弊した後にエラーハンドラが反応するようになりました。\n"
"ロードバランサーが疲弊した後にエラーハンドラが反応するようになりました。\n"
"Salesforceコンポーネントは、制限、最近の\n"
"アイテム、承認、コンポジットAPIをサポートしました。\n"
"CamelのルートをXMLとしてダンプする際に、xpath式などで使われるカスタム名前空間が含まれるようになりました。\n"
"xpath式などでのカスタム名前空間を含むようになりました。同様に、XMLからCamelのルートをアップデートする際にも\n"
"XMLからCamelのルートを更新する際に、xpath式に関連する名前空間が含まれるようになりました。\n"
"* コンシューマのエンドポイントに基づいてルート ID を自動で割り当てることができる `RouteIdFactory` を追加しました。\n"
"コンシューマのエンドポイントに基づいてルートIDを自動で割り当てることができる `RouteIdFactory` を追加しました。これにより、route1,\n"
"route2 などの代わりに、よりセンシティブな名前を使用することができます。\n"
"* Simple言語に `skip` 機能を追加しました。\n"
"Jetty 9.3 にアップグレードしました (Karaf 4.0.x のユーザーは Jetty 9.2 もサポートしています)\n"
"ユーザー）。)\n"
"* `RouteBuilder` の自動構成を無効にできるようになりました。\n"
"Camel CDI の設定から\n"
"Camel のコンテクストの自動起動を無効にできるようになりました。\n"
"Camel CDIの設定から\n"
"Camel CDI は、`TransactionErrorHandler` と `TransactionErrorHandler` のサポートを提供するようになりました。\n"
"Camel CDI は JTA 経由で `TransactionErrorHandler` と `TransactionPolicy` のサポートを提供するようになりました。\n"
"CXF JAX-RS プロデューサーの非同期サポートが追加されました。\n"
"追加されました。\n"
"JSonPath 言語が Map、List 型、POJO もサポートするようになりました。\n"
"型やPOJOもサポートするようになりました。POJOの場合は、クラスパスにJacksonが必要です。\n"
"クラスパスにJacksonがある必要があります。 \n"
"JSonまたはXMLにマーシャリングするデータフォーマットが追加されました。\n"
"コンテントタイプ・ヘッダーを application/json または application/xml に適切に設定するようになりました。\n"
"を適切に設定するようになりました。 \n"
"Kafka コンポーネントでは、オフセットの状態を保存するために\n"
"Kafkaコンポーネントは、オフセットの状態をオフライン（stateRepository）で保存し、この情報を保持して\n"
"前のオフセットから再開できるようになりました。\n"
"Kafka コンポーネントは、設定と使用がより簡単になるように改善されました。\n"
"改良されました。後方互換性のない変更があるため、ユーザーは移行する必要があります。\n"
"ユーザーは移行する必要があります。\n"
"Kafkaをベースにした、トピックベースの冪等なリポジトリ。\n"
"のためのKafkaベースの\n"
"Idempotent Consumer EIP\n"
"Kafkaコンポーネントは、メッセージボディを設定されたタイプに自動タイプ変換します。\n"
"Kafkaコンポーネントは、kafkaへの送信時に、メッセージボディを設定されたシリアライザで指定された型（デフォルトでは\n"
"デフォルトでは文字列）に自動的に変換します。また、エンドポイントでキー\n"
"と partitionKey をエンドポイントの URI で指定できるようになりました。\n"
"ヘッダーに指定する必要はありません。\n"
"* Kafka コンシューマーは、停止時に自動コミットして、ブローカーが最新のオフセットコミットを持っていることを確認するようになりました。\n"
"ブローカーが最新のオフセットコミットを持っていることを確認するために、Kafkaコンシューマーが停止時に自動コミットするようになりました。これは\n"
"オプション`autoCommitOnStop`は、sync、async、noneのいずれかに設定できます。\n"
"* JSonPathに簡単な述語パーサーを追加しました。\n"
"すべてのシンボルを含む複雑なjsonpath記法を使わずに、簡単な述語をより簡単に定義するための\n"
"記法を使わずに、簡単な述語を定義できるようになりました。\n"
"Boxコンポーネントは、Box v2 Java APIを使用するように移行されました。\n"
"Java APIに移行しました。\n"
"ソースコードからサンプルの概要が生成されるようになり、最新の情報が得られるようになりました。\n"
"になっています。\n"
"宣言型のTransformer \n"
"とバリデーター\n"
"宣言型のTransformer and Validatorが追加され、データ型に応じた変換/検証を行う\n"
"宣言型のTransformerとValidatorを追加しました。\n"
"宣言型のTransformerとValidatorを追加しました。\n"
"この機能を示す例がいくつかあります。\n"
"camel-example-transformer-blueeprint, camel-example-transformer-cdi, camel-example-transformer-demo,\n"
"そして camel-example-validator-spring-boot\n"
"* JPA Producer のクエリサポートを追加\n"

#. type: Plain text
#: upstream/content/releases/release-2.19.0.md:135
#, fuzzy, no-wrap
msgid "The following issues have been fixed\n"
msgstr "以下の問題が修正されました。\n"

#. type: Plain text
#: upstream/content/releases/release-2.19.0.md:176
#, fuzzy, no-wrap
msgid ""
"* Fixed starting Camel on Oracle JDK 1.8.0_19 or lower, which would\n"
"throw an UnsupportedOperationException\n"
"* Fixed running `mvn camel:run` when using OSGi Blueprint\n"
"* Fixed Hystrix EIP to also execute fallback if\n"
"execution was rejected or short-circuited or other reasons from\n"
"Hystrix. \n"
"* Fixed Hystrix EIP race condition when timeout\n"
"was hit and fallback is executed could let to Camel Exchange having\n"
"wrong caused exception.\n"
"* Fixed adding new routes to running CamelContext and if the new routes\n"
"would fail to startup, then before these routes would \"hang around\". Now\n"
"only succesful started routes are added.\n"
"* Adding or removing routes that starts\n"
"from Undertow no longer restart the entire HTTP\n"
"server\n"
"* VM endpoint should prepare exchange with the\n"
"CamelContext from the consumer and not from cached endpoint which can be\n"
"different\n"
"* Fixed a bug when using Rest DSL\n"
"with SERVLET could cause a java.io.IOException:\n"
"Stream closed exception when using Bean component in the route. \n"
"* Fixed an issue when using `pipeline` in Java DSL not setting up the\n"
"EIP correctly which could lead to runtime route not as intended.\n"
"* Fixed Dropbox to\n"
"use Stream caching to avoid reading entire\n"
"file into memory so Camel can process big files\n"
"* Fixed `toD` issue with splitting uris when RAW values had + sign\n"
"* Fixed adviceWith may behave differently when using multiple advices in\n"
"the same order and you would advice on the same nodes.\n"
"* Fixed camel-zipkin to be able to startup and\n"
"work with Camel XML \n"
"* Fixed FTP2 readLock=changed not working (when\n"
"fastFileExists=false) if no sub folder was specified as starting\n"
"directory.\n"
"* Fixed Simple language when using indexing with a\n"
"nested function\n"
"* Fixed issue with `@Consume` not having `CamelContext` injected and its\n"
"lifecycle managed by `CamelContext`\n"
"* Fixed Netty double buffer release leak in Netty4\n"
"and Netty4 HTTP\n"
msgstr ""
"* Oracle JDK 1.8.0_19 以下で Camel を起動すると、UnsupportedOperationException が発生する問題を修正しました。\n"
"UnsupportedOperationException を投げていました。\n"
"* OSGi ブループリントを使用しているときに、`mvn camel:run` を実行するように修正しました。\n"
"OSGiブループリントを使用しているときに、`mvn camel:run`を実行するように修正しました。\n"
"実行が拒否されたり、ショートしたり、その他の理由でHystrixから\n"
"Hystrix \n"
"タイムアウトが発生してフォールバックが実行されたときに、Hystrix EIPのレースコンディションを修正しました。\n"
"タイムアウトが発生してフォールバックが実行されると、Camel Exchangeが誤った原因で\n"
"誤った原因による例外が発生する可能性がありました。\n"
"* 実行中のCamelContextに新しいルートを追加し、新しいルートが起動に失敗した場合に\n"
"新しいルートがスタートアップに失敗した場合、以前はこれらのルートが「ぶらぶら」していました。現在は\n"
"起動に成功したルートのみが追加されるようになりました。\n"
"* Undertowから始まるルートを追加または削除しても\n"
"Undertowから始まるルートを追加または削除しても、HTTPサーバー全体を再起動することはなくなりました。\n"
"サーバー\n"
"VMエンドポイントは、消費者からのCamelContextとの交換を準備する必要があります。\n"
"VMエンドポイントは、コンシューマーからのCamelContextとの交換を準備する必要があり、キャッシュされたエンドポイントからではない。\n"
"異なる\n"
"Rest DSL\n"
"をSERVLETで使用すると、java.io.IOException.Stream closed例外が発生することがありました。\n"
"ルートでBeanコンポーネントを使用している場合、java.io.IOException: Stream closed例外が発生するバグを修正しました。 \n"
"Java DSLで`pipeline`を使用する際に、EIPが正しく設定されていないという問題を修正しました。\n"
"EIPが正しく設定されていないため、ランタイムルートが意図したとおりにならないことがある問題を修正しました。\n"
"* Dropboxが\n"
"ストリームキャッシングを使用して、ファイル全体を\n"
"ファイル全体をメモリに読み込まないようにDropboxを修正しました。\n"
"* RAW値に+記号がある場合に尿を分割する際の`toD`問題を修正しました。\n"
"* Fixed adviceWith may be different behavior when using multiple advice in the same order and you would give advice on the way.\n"
"複数のアドバイスを同じ順番で使用し、同じノードにアドバイスをする場合に、異なる動作をすることがあります。\n"
"* camel-zipkinがCamel XMLで起動して動作するように修正しました。\n"
"Camel XMLで動作するように修正しました。 \n"
"FTP2 の readLock=changed が動作しないのを修正しました (when\n"
"fastFileExists=falseのとき）に動作しないのを修正しました。\n"
"ディレクトリを削除しました。\n"
"* Fixed Simple language when using indexing with a nested function.\n"
"ネストされた関数\n"
"* `@Consume` に `CamelContext` が注入されておらず、そのライフサイクルが `CamelContext` によって管理されていなかった問題を修正しました。\n"
"ライフサイクルが`CamelContext`によって管理されていない問題を修正しました。\n"
"* Netty4のダブルバッファリリースのリークを修正\n"
"とNetty4 HTTP\n"

#. type: Plain text
#: upstream/content/releases/release-2.19.0.md:178
#, fuzzy, no-wrap
msgid "API breaking\n"
msgstr "APIブレーク\n"

#. type: Plain text
#: upstream/content/releases/release-2.19.0.md:211
#, fuzzy, no-wrap
msgid ""
"* The groovy DSL from camel-groovy has been moved into its own\n"
"camel-groovy-dsl module. The camel-groovy now only contains the Camel\n"
"Language\n"
"* Camel-spring-LDAP now uses `java.util.function.BiFunction<L, Q, S>`\n"
"instead\n"
"of `org.apache.camel.component.springldap.LdapOperationsFunction<Q, S>`\n"
"* The deprecated APIs from camel-spring-boot has been removed as part of\n"
"upgrading and supporting Spring Boot 1.5.x\n"
"* The `getComponentDocumentation` method on `CamelContext` is deprecated\n"
"and returns null. The embedded HTML documentation in all the Camel\n"
"components has been removed as they are not in use/maintained, and the\n"
"JSon schema is the actual information. Use the camel-catalog for\n"
"component documentation where you can get all the documentation in both\n"
"ascii doc and html format.\n"
"* camel-mongodb-gridf schema has been renamed\n"
"from *gridfs* to *mongodb-gridfs* to avoid confusion.\n"
"* The commands-core has the Catalog commands removed\n"
"* The org.apache.camel.spring.boot.FatJarRouter has been removed, just\n"
"use regular `RouteBuilder` classes in Spring Boot applications.\n"
"* The Kafka endpoint option\n"
"`seekToBeginning=true` should be migrated to `seekTo=beginning`\n"
"* The Kafka endpoint option bridgeEndpoint has moved from endpoint to\n"
"the KafkaConfiguration class so all options are together.\n"
"* The Kafka component has been improved to be easier to\n"
"configure and use. Notice there is a backwards incompatible change so\n"
"users need to migrate. The kafka uri is changed from kafka:brokers to\n"
"kafka:topic. So you need to specify the topic name in the context-path\n"
"and the brokers as parameters, eg before\n"
"`kafka:myserver?topic=sometopic` is\n"
"now `kafka:sometopic?brokers=myserver`\n"
"* The Infinispan uri syntax has changed from\n"
"infinispan:hostName?options to infinispan:cacheName?options\n"
msgstr ""
"* camel-groovy の groovy DSL は、独自の\n"
"Camel-groovyからのgroovy DSLは、独自のcamel-groovy-dslモジュールに移動しました。camel-groovy には Camel の\n"
"言語\n"
"* Camel-spring-LDAP は、`java.util.function.BiFunction<L, Q, S>`</L,> を使用するようになりました。<L, Q, S>\n"
"の代わりに\n"
"BiFunction` の代わりに、`org.apache.camel.component.springldap.LdapOperationsFunction<Q, S>`</Q,> を使うようになりました。<Q, S>\n"
"* camel-spring-boot の非推奨 API は、Spring Boot 1.0 のアップグレードとサポートの一環として削除されました。\n"
"Spring Boot 1.5.xへのアップグレードとサポートの一環として削除されました。\n"
"* `CamelContext` の `getComponentDocumentation` メソッドは非推奨です。\n"
"で、null を返します。すべての Camel コンポーネントに埋め込まれていた HTML ドキュメントが削除されました。\n"
"すべての Camel コンポーネントに埋め込まれた HTML ドキュメントは、使用されておらず、メンテナンスもされていないため、削除されました。\n"
"JSon スキーマが実際の情報となります。JSon スキーマが実際の情報です。\n"
"コンポーネントのドキュメントには、 camel-catalog を使用してください。\n"
"コンポーネントのドキュメントには camel-catalog を使用してください。\n"
"camel-mongodb-gridf スキーマの名前が変更されました。\n"
"混乱を避けるために、*gridfs*から*mongodb-gridfs*に変更されました。\n"
"* commands-core には、Catalog コマンドが削除されました。\n"
"* org.apache.camel.spring.boot.FatJarRouter は削除されました。\n"
"Spring Bootアプリケーションでは通常の`RouteBuilder`クラスを使用してください。\n"
"* Kafkaのエンドポイントオプション\n"
"seekToBeginning=true` は `seekTo=beginning` に移行してください。\n"
"* Kafka のエンドポイントオプション bridgeEndpoint は、endpoint から\n"
"KafkaConfigurationクラスに移動し、すべてのオプションが一緒になりました。\n"
"* Kafka コンポーネントが改良され、設定や使用がより簡単になりました。\n"
"改良されました。下位互換性のない変更があるため、ユーザーは移行する必要があります。\n"
"ユーザーは移行する必要があります。kafkaのURIは、kafka:brokersから\n"
"kafka:brokersからkafka:topicに変更されました。そのため、コンテキストパスにトピック名を指定し、パラメータとしてブローカーを指定する必要があります。\n"
"にトピック名を指定し、パラメータとしてブローカーを指定する必要があります。\n"
"例えば、以前の `kafka:myserver?topic=sometopic` は\n"
"今は `kafka:sometopic?brokers=myserver` です。\n"
"InfinispanのURI構文が以下のように変更されました。\n"
"infinispan:hostName?options から infinispan:cacheName?options に変更されました。\n"
"</Q,></L,>"

#. type: Plain text
#: upstream/content/releases/release-2.19.0.md:213
#, fuzzy, no-wrap
msgid "Important changes to consider when upgrading\n"
msgstr "アップグレード時に考慮すべき重要な変更点\n"

#. type: Plain text
#: upstream/content/releases/release-2.19.0.md:243
#, fuzzy, no-wrap
msgid ""
"* camel-spring-dm has been disabled from the karaf features file so\n"
"users cannot install it out of the box as it does not work properly.\n"
"camel-spring-dm has been deprecated for a long time and users are\n"
"encouraged to use osgi blueprint instead. The JAR is still shipped and\n"
"can be installed manually but then you are on your own. The JAR will be\n"
"removed completed in a future release.\n"
"* Groovy DSL and Scala DSL is deprecated and planned to be moved to\n"
"Camel Extra and not distributed out of\n"
"the box in the future.\n"
"* Camel now uses Karaf 4.x API and therefore not possible to run on\n"
"older Karaf versions.\n"
"* `camel-blueprint` changed startup behavior to start on\n"
"Blueprint.CREATED event which would be more `correct` way of startup\n"
"instead of Blueprint.REGISTERED as before.\n"
"* camel-spring-boot now don't include prototype scoped beans when auto\n"
"scanning for RouteBuilder instances, which is how camel-spring works.\n"
"You can turn this back using the includeNonSingletons option.\n"
"* camel-spring-javaconfig removed from Karaf features as it was not\n"
"really supported in OSGi/Karaf.\n"
"* camel spring-boot shell commands have been removed as spring-boot\n"
"shell has been deprecated in spring-boot.\n"
"* camel-mongodb-gridf schema has been renamed from gridfs to\n"
"mongodb-gridfs to avoid confusion.\n"
"* camel-box has been migrated to use box v2 api so there may be some\n"
"migration needed as the old camel-box component was using box v1 api\n"
"* The JSon schema from camel-catalog have changed to use boolean,\n"
"integer and numeric values when applicable instead of using string\n"
"values for everything. \n"
"* The camel-catalog Karaf commands has been removed\n"
msgstr ""
"* camel-spring-dm は karaf 機能ファイルから無効になりました。\n"
"ユーザーがそのままインストールすることはできませんが、これは正しく動作しません。\n"
"camel-spring-dm は長い間、非推奨とされてきました。\n"
"代わりに osgi blueprint を使うことが推奨されています。JARはまだ出荷されており\n"
"手動でインストールすることもできますが、その場合は自己責任でお願いします。このJARは将来のリリースで完全に削除される予定です。\n"
"将来のリリースでは削除される予定です。\n"
"Groovy DSL と Scala DSL は非推奨で、Camel Extra に移行する予定です。\n"
"Camel Extraに移行する予定です。\n"
"将来的には配布しない予定です。\n"
"CamelはKaraf 4.xのAPIを使用しているため、古いバージョンのKarafでは動作しません。\n"
"古いバージョンのKarafでは動作しません。\n"
"* `camel-blueprint` は起動時の動作を変更し、Blueprint.CREATED イベントで起動するようにしました。\n"
"Blueprint.REGISではなく、Blueprint.CREATEDイベントで起動するように変更しました。\n"
"起動時の動作を変更しました。\n"
"* camel-spring-boot は、RouteBuilder インスタンスを自動スキャンする際に、 プロトタイプにスコープされた豆を含まないようになりました。\n"
"これは、camel-springがどのように動作するかを示しています。\n"
"これは camel-spring の動作方法です。includeNonSingletons オプションを使用してこれを元に戻すことができます。\n"
"* camel-spring-javaconfig は、OSGi/Karaf で実際にサポートされていないため、Karaf の機能から削除されました。\n"
"OSGi/Karaf で実際にサポートされていないため、Karaf 機能から削除されました。\n"
"camel-spring-boot shell コマンドは、spring-boot でシェルが非推奨になったので削除されました。\n"
"shell は spring-boot で廃止されました。\n"
"* camel-mongodb-gridf スキーマは gridfs から名前が変更されました。\n"
"mongodb-gridfs に変更されました。\n"
"* camel-box は box v2 api を使用するように移行されました。\n"
"古い camel-box コンポーネントは box v1 api を使用していたので、移行が必要になるかもしれません。\n"
"* camel-catalogのJSonスキーマは、boolean.integer.numeric値を使用するように変更されました。\n"
"値を使用するように変更されました。\n"
"値を使用するように変更されました。 \n"
"* camel-catalogのKarafコマンドは削除されました。\n"
