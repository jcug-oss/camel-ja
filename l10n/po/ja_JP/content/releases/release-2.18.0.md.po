# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-05-18 09:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: preview
#: upstream/content/releases/release-2.18.0.md:1
#, fuzzy, no-wrap
msgid "Major release for 2.18.x"
msgstr "2.18.xのメジャーリリース"

#. type: YAML Front Matter: title
#: upstream/content/releases/release-2.18.0.md:1
#, fuzzy, no-wrap
msgid "Release 2.18.0"
msgstr "リリース 2.18.0"

#. type: Plain text
#: upstream/content/releases/release-2.18.0.md:19
#, fuzzy, no-wrap
msgid ""
"Welcome to the 2.18.0 release which resolved over 500 issues. This is\n"
"first release that requires Java 8 and comes with a much-improved Spring\n"
"Boot support, and ships with numerous new features, improvements and bug\n"
"fixes.\n"
msgstr ""
"500件以上の問題を解決した2.18.0のリリースへようこそ。このリリースは\n"
"Java 8を必要とする最初のリリースであり、大幅に改善されたSpring\n"
"改良されたSpring Bootサポートを搭載しており、数多くの新機能、改良、バグ修正が含まれています。\n"
"を修正しました。\n"

#. type: Plain text
#: upstream/content/releases/release-2.18.0.md:188
#, fuzzy, no-wrap
msgid ""
"* Java DSL with experimental Java8 functional/lambda support. Check out\n"
"the camel-example-java8.\n"
"We love feedback on this DSL and expect to improved the API over the\n"
"next couple of releases.\n"
"* The XSD schema for `<camelContext>` and its other configuration elements\n"
"are now also documented (before it was only `<routes>` and `<rests>`). The\n"
"XSD schema now also documents the default values of all the options.\n"
"* Introduced `FluentProducerTemplate` using fluent builder style as a\n"
"alternative to ProducerTemplate\n"
"* All Camel Components that has options to be\n"
"configured now supports and include Spring\n"
"Boot auto configuration for those options, so they can easily be\n"
"configured in your application.yaml file when using Spring Boot with\n"
"Camel. \n"
"* Camel Spring Boot now supports the\n"
"same link:advanced-configuration-of-camelcontext-using-spring.html[advanced\n"
"configuration] you can do with Spring XML, if the beans have been\n"
"configured using `@Bean` style in a Spring Boot configuration class.\n"
"* Added Hystrix EIP as EIP pattern that uses\n"
"native Netflixx Hystrix as the Circuit Breaker implementation. This\n"
"requires having `camel-hystrix` on the classpath.\n"
"* Added Service Call EIP as EIP pattern that\n"
"allows to call a remote service in a distributed system, where the\n"
"service is looked up from a service registry of some sorts, such as\n"
"kubernetes, consul, etcd, zookeeper etc.\n"
"* Running Camel with Spring Boot now includes a\n"
"Camel Health Indicator (actuator) if `spring-boot-starter-actuator` is\n"
"on the classpath.\n"
"* The Rest component allows to call REST services now\n"
"(as a client), where you can pick one of the following Camel components\n"
"for the HTTP transport: http, http4, netty4-http, jetty, restlet,\n"
"undertow. You can also refer to a existing swagger api doc and include\n"
"camel-swagger-java on the classpath, for automatic validation of rest\n"
"endpoint is configured to use a valid rest operation/parameters.\n"
"* The Rest DSL now auto discovers which HTTP component to use if no\n"
"explicit component name has been configured, by the available components\n"
"on the classpath (by their default name) and if there only exists one,\n"
"then that is used.\n"
"* Spring-DM for OSGi moved out of camel-spring into a separate\n"
"camel-spring-dm module. \n"
"* Improved the Bean component to better match method\n"
"parameter types when using Simple language as\n"
"parameter values.\n"
"* Added `BindyConverter` that allows to implement custom data converters\n"
"for Bindy\n"
"* The access in the Rest DSL has been deprecated and\n"
"no longer in use - its not part of swagger specification anymore.\n"
"* Camel-NATS now uses JNATS client instead of the\n"
"deprecated Java_nats one.\n"
"* During startup of link:../camelcontext.adoc[CamelContext] the services\n"
"that are used as part of routes are now deferred being started to the\n"
"end of the startup process. Some IoC frameworks like Spring can\n"
"otherwise causes a circular dependency issue if services are started too\n"
"early. A side effect is that if service startup failures happen when\n"
"being started later, they are now wrapped in the\n"
"`FailedToStartupRouteException` to better pin point which route thas the\n"
"problem.\n"
"* Improved the startup sequence of Spring\n"
"Java Config to be similar to Spring Boot that\n"
"helps prevent Spring initialization errors about circular dependencies\n"
"issues.\n"
"* Added PATCH to Rest DSL\n"
"* Added \"starts with\" and \"ends with\" operator to the\n"
"Simple language.\n"
"* Added `BeanIOSplitter` to BeanIO that can be used\n"
"with the Splitter EIP to split big payloads in\n"
"streaming mode without reading the entire content into memory.\n"
"* Some of the AWS components allows to specify ARN in the\n"
"endpoint configuration. \n"
"* The create operation in Zookeeper now creates sub\n"
"paths if missing.\n"
"* Added support for async mode for SERVLET component\n"
"to leverage Asynchronous Servlet from the Servlet 3.0 spec.\n"
"* Bean component and Bean\n"
"Language validates method name must be a valid according to java\n"
"identifier rules, and also if parameter syntax has an ending\n"
"parenthesis.\n"
"* You can now use `@RunWith(CamelSpringBootJUnit4ClassRunner.class)` to\n"
"test Camel Spring Boot applications and use the\n"
"Camel test annotations from Spring Testing\n"
"such as `@MockEndpoints`.\n"
"* To turn on logging exhausted message body with the message history you\n"
"can configure this easily on the CamelContext level\n"
"with `setLogExhaustedMessageBody`\n"
"* Camel-Infinispan now supports Aggregation\n"
"Repository: InfinispanLocalAggregationRepository and\n"
"InfinispanRemoteAggregationRepository\n"
"* The SQL Component and\n"
"ElSql now supports `outputType=StreamList` to use an\n"
"iterator for the output of the SQL query that allows to process the data\n"
"in a streaming fashion such as with the Splitter EIP\n"
"to process the data row by row, and load data from the database as\n"
"needed.\n"
"* JPA now includes a `JpaPollingConsumer` implementation\n"
"that better supports Content Enricher\n"
"using `pollEnrich` to do a on-demand poll that returns either none, one\n"
"or a list of entities as the result. \n"
"* Calling Bean with method parameters defined\n"
"using Simple language parameters, now avoids an intermediate\n"
"conversion of the parameters to a String value. This ensures the passed\n"
"in values when calling the bean method is using the parameter type as-is\n"
"from Simple language.\n"
"* Camel CDI now supports importing Camel XML\n"
"configuration files\n"
"* Camel CDI does not deploy an empty Camel context bean\n"
"anymore if not route builder beans nor Camel beans are deployed\n"
"* Camel CDI adds the `@Named` qualifier to Camel route\n"
"management events so that it's possible to observe these events for a\n"
"specific route with an explicit `id`\n"
"* Camel BeanIO now supports the possibility to use a\n"
"custom BeanReaderErrorHandler implementation in his configuration\n"
"* Camel Kubernetes now supports Kubernetes\n"
"ConfigMap feature\n"
"* The Tokenizer\n"
"and XMLTokenizer language now supports using\n"
"Simple expressions as the token / xml tag names so\n"
"they can be dynamic values.\n"
"* Added `filterDirectory` and `filterFile` options\n"
"to File2 so filtering can be done\n"
"using Simple language or predicates. \n"
"* Optimize Camel to only enable AllowUseOriginalMessage if in use by\n"
"error handler or OnCompletion. End user who\n"
"manually access the original message using the Java API must\n"
"configure AllowUseOriginalMessage=true.\n"
"* Camel-AHC\n"
"Camel-HTTP Camel-HTTP4 Camel-Jetty now\n"
"support a connectionClose parameter to allow explicitly adding a\n"
"Connection Close header to HTTP request\n"
"* Bindy allows to plugin custom formatters for mapping\n"
"to custom types.\n"
"* Content Enricher using `pollEnrich` now\n"
"supports consumers configured with `consumer.bridgeErrorHandler=true` to\n"
"let any exceptions from the poll propagate to the route error handler,\n"
"to let it be able to perform redeliveries and whatnot.\n"
"* CXF and CXFRS now support setting of\n"
"the SSL-context link:camel-configuration-utilities.html[Using the JSSE\n"
"Configuration Utility]\n"
"* MongoDB now is fully converted to MongoDB 3\n"
"although we still use BasicDBObject instead of Document\n"
"* Camel Spring Boot can now scan for classes in Spring Boot FAR jars\n"
"with embeds third party JARs.\n"
"* You can now set the SNI Hostnames using the\n"
"Camel Configuration Utilities\n"
"to indicate the hostnames you try to connect\n"
"* The XML DSL will preserve double spaces in the context-path of uri\n"
"attributes when removing white space noise, when uri's are configured\n"
"using mutli lines.\n"
"* The Camel Catalog module can now load older versions of Camel to be\n"
"used when querying the catalog. There is a `camel-catalog-maven` module\n"
"that is able to download catalog JARs from Maven central.\n"
"* A new Camel Attachment interface was added that allows propagating\n"
"headers for attachments. Camel CXF, Camel\n"
"Mail (including the MIME-Multipart data\n"
"format), and Camel-Jetty set and consume attachment\n"
"headers.\n"
"* Improved bean method call to validate if method name\n"
"with parameters has valid number of parenthesis in the syntax.\n"
"* The JSonPath now supports\n"
"inlined Simple language expressions to allow more\n"
"dynamic expressions.\n"
"* Improved Netty4 producer to be fully asynchronous when connecting to\n"
"remote server.\n"
"* The Websocket component now uses a timeout when\n"
"sending to websocket channels to avoid potentially blocking for a long\n"
"time due networking issues with clients.\n"
"* Hazelcast Component now provide\n"
"a RoutePolicy.\n"
"* Saxon has been upgraded to version 9.7\n"
msgstr ""
"実験的にJava8の関数型/ラムダをサポートしたJava DSLです。以下をご覧ください。\n"
"camel-example-java8 をご覧ください。\n"
"このDSLへのフィードバックを歓迎し、次の数回のリリースでAPIを改善する予定です。\n"
"次の数回のリリースでAPIを改善する予定です。\n"
"<camelContext>* `` とその他の設定要素</camelContext>の XSD スキーマが文書化されました。<camelContext>\n"
"のXSDスキーマがドキュメント化されました（以前は<routes>`` と<rests>``</rests></routes> だけでした）。<routes><rests>XSDスキーマは\n"
"XSDスキーマは、すべてのオプションのデフォルト値もドキュメント化しました。\n"
"* ProducerTemplateに代わるものとして、Fluentビルダースタイルを使用した`FluentProducerTemplate`を導入しました。\n"
"ProducerTemplateの代替として\n"
"* オプションが設定されているすべての Camel コンポーネントが\n"
"設定するオプションを持つすべての Camel コンポーネントは、Spring\n"
"Spring Bootの自動設定をサポートしています。\n"
"これにより、Spring BootとCamelを併用する際に、application.yamlファイルで簡単に設定できるようになりました。\n"
"Camel \n"
"* CamelのSpring Bootは、現在、以下をサポートしています。\n"
"そのため、Spring BootをCamelと一緒に使用する場合、application.yamlファイルを簡単に設定できます。\n"
"設定]をサポートしました。\n"
"Spring Bootの設定クラスで、`@Bean`スタイルを使用してBeanが設定されている場合、Spring XMLで行うことができるようになりました。\n"
"* ネイティブのNetflixx Hystrixを使用するEIPパターンとして、Hystrix EIPを追加しました。\n"
"ネイティブのNetflixx HystrixをCircuit Breakerの実装として使用するEIPパターンとしてHystrix EIPを追加しました。これには\n"
"これには、クラスパスに `camel-hystrix` が必要です。\n"
"サービスコールEIPをEIPパターンとして追加しました。\n"
"EIPパターンとしてService Call EIPを追加しました。\n"
"分散システムでリモートサービスを呼び出すためのEIPパターンとして、Service Call EIPを追加しました。\n"
"kubernetes, consul, etcd, zookeeper など。\n"
"* Spring BootでCamelを実行すると、以下の機能が追加されます。\n"
"クラスパスに `spring-boot-starter-actuator` がある場合、Camel Health Indicator (actuator) が含まれるようになりました。\n"
"がクラスパス上にある場合、Camel Health Indicator (actuator)が含まれるようになりました。\n"
"* Restコンポーネントで、RESTサービスを呼び出せるようになりました。\n"
"クライアントとして）RESTサービスを呼び出すことができるようになり、HTTPトランスポートに以下のCamelコンポーネントのいずれかを選択できます。\n"
"HTTPトランスポート用：http、http4、netty4-http、jetty、restlet,\n"
"undertowです。また、既存のswagger apiのドキュメントを参照し、以下のようにインクルードすることもできます。\n"
"camel-swagger-javaをクラスパスに含めて、restの自動検証を行うこともできます。\n"
"エンドポイントが有効なrest操作/パラメータを使用するように設定されていることを確認します。\n"
"* Rest DSLは、明示的なコンポーネント名が設定されていない場合、どのHTTPコンポーネントを使用するかを自動検出するようになりました。\n"
"明示的なコンポーネント名が設定されていない場合は、クラスパス上の利用可能なコンポーネント\n"
"クラスパス上の利用可能なコンポーネント(デフォルト名)によって、どのHTTPコンポーネントを使用するかを自動的に検出します。\n"
"1つしか存在しない場合は、それが使用されます。\n"
"* OSGi 用の Spring-DM は camel-spring から独立した\n"
"camel-spring-dmモジュールに移動しました。 \n"
"* Simple言語を使用しているときにメソッド\n"
"パラメータ値としてSimple言語を使用する場合、メソッドのパラメータ・タイプと\n"
"パラメータ値としてSimple言語を使用するときに、メソッドのパラメータ・タイプをより適切にマッチさせるように改善しました。\n"
"BindyConverter`を追加し、Bindy用のカスタムデータコンバータを実装できるようにしました。\n"
"Bindy用\n"
"Rest DSLでのアクセスは非推奨で、もはや使用されていません。\n"
"Swaggerの仕様には含まれていません。\n"
"Camel-NATSはJNATSクライアントを使うようになりました。\n"
"Camel-NATSは、非推奨のJava_natsの代わりにJNATSクライアントを使うようになりました。\n"
"* link:.../camelcontext.adoc[CamelContext]の起動時に、ルートの一部として使用されるサービスが\n"
"ルートの一部として使用されているサービスは、起動プロセスの最後まで延期されるようになりました。\n"
"スタートアッププロセスの最後まで延期されるようになりました。SpringのようなIoCフレームワークでは\n"
"のようなIoCフレームワークでは、サービスの起動が早すぎると循環的な依存関係の問題が発生します。\n"
"早すぎると循環依存の問題が発生します。副次的な効果として、後から起動したときにサービスの起動に失敗した場合、その失敗は\n"
"副次的な効果として、後から起動したときにサービス起動の失敗が起こった場合、それらは\n"
"FailedToStartupRouteException`にラップされるようになり、どのルートで問題が発生したのかを\n"
"問題を解決しました。\n"
"* Springの起動シーケンスを改善しました。\n"
"Java Configの起動シーケンスをSpring Bootと同様に改善しました。\n"
"Spring Java Configの起動シーケンスをSpring Bootと同じように改善したことで、循環依存性の問題でSpringの初期化エラーが\n"
"問題を解決します。\n"
"* Rest DSLにPATCHを追加しました。\n"
"Simple言語に \"starts with \"と \"ends with \"演算子を追加しました。\n"
"シンプルな言語です。\n"
"Splitter EIPで大きなペイロードを分割するために、BeanIOに`BeanIOSplitter`を追加しました。\n"
"Splitter EIPと一緒に使用することができます。\n"
"ストリーミングモードで大きなペイロードを、コンテンツ全体をメモリに読み込まずに分割することができます。\n"
"一部のAWSコンポーネントでは、エンドポイント設定でARNを指定できるようになりました。\n"
"エンドポイントの設定でARNを指定できるようになりました。 \n"
"Zookeeper の create 操作で、サブパスが存在しない場合にサブパスを作成するようになりました。\n"
"パスを作成するようになりました。\n"
"SERVLETコンポーネントの非同期モードのサポートを追加しました。\n"
"Servlet 3.0仕様のAsynchronous Servletを活用するために、SERVLETコンポーネントに非同期モードのサポートを追加しました。\n"
"BeanコンポーネントとBean\n"
"言語は、メソッド名がjavaの識別子の規則に従って有効でなければならないことを検証します。\n"
"識別子のルールに基づいて有効でなければならず、また、パラメータ構文の末尾に\n"
"括弧がある場合も検証します。\n"
"* `@RunWith(CamelSpringBootJUnit4ClassRunner.class)`を使用して、Camel Spring Bootアプリケーションをテストして\n"
"Camel Spring Boot アプリケーションをテストして\n"
"Spring TestingのCamelテストアノテーション\n"
"例えば、`@MockEndpoints`などです。\n"
"* メッセージボディとメッセージヒストリーのログ排出を有効にするには、Camelで簡単に設定できます。\n"
"CamelContextレベルで簡単に設定できます。\n"
"setLogExhaustedMessageBody`で設定できます。\n"
"* Camel-InfinispanがAggregationをサポートしました。\n"
"リポジトリにInfinispanLocalAggregationRepositoryと\n"
"InfinispanRemoteAggregationRepository (インフィニスパンリモートアグリゲーションリポジトリ)\n"
"SQLコンポーネントと\n"
"ElSqlは、`outputType=StreamList`をサポートしています。\n"
"SQLコンポーネントとElSqlは、`outputType=StreamList`をサポートし、SQLクエリの出力にイテレータを使用することで、データを\n"
"スプリッターEIPのようにストリーミングでデータを処理することができます。\n"
"データを行ごとに処理したり、必要に応じてデータベースからデータを読み込むことができます。\n"
"が必要になりました。\n"
"JPAには、Content Enricherをよりよくサポートする`JpaPollingConsumer`の実装が含まれています。\n"
"JpaPollingConsumer`の実装が追加され、Content Enricherのサポートが強化されました。\n"
"pollEnrich`を使用してオンデマンドのポーリングを行い、結果として、なし、1つ、またはエンティティのリストのいずれかを返します。\n"
"エンティティのリストを結果として返します。 \n"
"シンプルな言語パラメータを使用して定義されたメソッドパラメータを持つBeanを呼び出す\n"
"シンプルな言語パラメータを使用して定義されたメソッドパラメータを持つBeanを呼び出すと、パラメータのString値への中間的な\n"
"文字列値へのパラメータの中間的な変換を回避できるようになりました。これにより、Beanメソッドを呼び出す際に渡される\n"
"これにより、Beanメソッドを呼び出す際に渡される値が、Simple言語のパラメータタイプをそのまま使用していることが保証されます。\n"
"Simple言語から。\n"
"Camel CDIは、Camel XML設定ファイルのインポートをサポートします。\n"
"設定ファイルのインポートをサポートしました。\n"
"Camel CDIは空のCamelコンテキスト・ビーンをデプロイしません。\n"
"Camel CDIは空のCamelコンテキスト・ビーンをデプロイしないようになりました。\n"
"* Camel CDIは、Camelのルート管理イベントに`@Named`修飾子を追加します。\n"
"管理イベントに`@Named`という修飾子を追加しています。\n"
"これにより、明示的な「id」を持つ特定のルートのイベントを観察することができます。\n"
"Camel BeanIOでは、カスタムの\n"
"設定でカスタムBeanReaderErrorHandler実装を使用できるようになりました。\n"
"Camel KubernetesがKubernetesをサポートしました。\n"
"コンフィグマップ機能\n"
"Tokenizer\n"
"およびXMLTokenizer言語は、以下の使用をサポートします。\n"
"シンプルな式をトークン/xmlタグ名として使用できるようになりました。\n"
"これにより、動的な値を使用できるようになりました。\n"
"* File2に`filterDirectory`と`filterFile`オプションを追加しました。\n"
"File2に`filterDirectory`と`filterFile`オプションを追加しました。\n"
"シンプルな言語や述語を使ってフィルタリングできるようになりました。 \n"
"* エラーハンドラや OnCompletion で使用されている場合にのみ AllowUseOriginalMessage を有効にするように Camel を最適化しました。\n"
"エラーハンドラやOnCompletionで使用されている場合のみAllowUseOriginalMessageを有効にするようにCamelを最適化します。エンドユーザーが\n"
"Java APIを使用して元のメッセージに手動でアクセスするエンドユーザーは\n"
"AllowUseOriginalMessage=trueを設定する必要があります。\n"
"Camel-AHC\n"
"Camel-HTTP Camel-HTTP4 Camel-Jetty は、接続を閉じるパラメータを\n"
"HTTPリクエストに明示的にコネクションクローズヘッダを追加できるconnectionCloseパラメータをサポートしました。\n"
"HTTPリクエストにConnection Closeヘッダを明示的に追加できるようになりました。\n"
"Bindyでは、カスタムタイプにマッピングするためのカスタムフォーマッタをプラグインできるようになりました。\n"
"カスタムタイプにマッピングするためのカスタムフォーマッタをプラグインできるようになりました。\n"
"* `pollEnrich` を使ったコンテンツ・エンリッチメントは\n"
"コンシューマは、`consumer.bridgeErrorHandler=true`で設定されたコンシューマをサポートします。\n"
"これにより、ポールからの例外がルートのエラーハンドラに伝搬されるようになりました。\n"
"これにより、ポールからの例外がルートのエラーハンドラに伝わり、再配送などを行うことができるようになります。\n"
"CXFとCXFRSは、以下の設定をサポートしています。\n"
"CXFとCXFRSはSSL-contextの設定をサポートしました link:camel-configuration-utilities.html[Using the JSSE\n"
"設定ユーティリティ] を参照してください。\n"
"* MongoDBがMongoDB 3に完全に変換されました。\n"
"Documentの代わりにBasicDBObjectを使用していますが\n"
"* Camel Spring Bootは、Spring Boot FARのジャーにあるクラスをスキャンできるようになりました。\n"
"サードパーティのJARを埋め込むことができるようになりました。\n"
"* SNIホスト名の設定は\n"
"Camel Configuration Utilities\n"
"接続しようとするホスト名を示すために\n"
"XML DSLは、空白ノイズを除去する際に、uri属性のcontext-pathにダブルスペースを保持します。\n"
"属性のコンテキスト・パスにあるダブル・スペースを保持します。\n"
"行を使用して設定されている場合、空白ノイズを除去する際にXML DSLはuri属性のcontext-pathにダブルスペースを保持します。\n"
"Camel Catalogモジュールは、カタログを照会する際に使用される古いバージョンのCamelをロードできるようになりました。\n"
"古いバージョンのCamelをロードして、カタログを照会する際に使用できるようになりました。カタログのJARをダウンロードできる`camel-catalog-maven`モジュールがあります。\n"
"モジュールがあり、Maven centralからカタログJARをダウンロードすることができます。\n"
"* 新しい Camel Attachment インターフェースが追加されました。\n"
"ヘッダーを伝搬することができます。Camel CXF、Camel\n"
"メール(MIME-Multipart データフォーマットを含む)、Camel\n"
"形式を含む）、および Camel-Jetty は、添付ファイルのヘッダを設定および消費します。\n"
"ヘッダーを設定・消費します。\n"
"* ビーンのメソッド呼び出しにおいて、パラメータ付きのメソッド名\n"
"が有効な括弧の数を持っているかどうかを検証するように改善しました。\n"
"JSonPathは、以下をサポートします。\n"
"インラインされたシンプルな言語表現をサポートし、よりダイナミックな\n"
"ダイナミックな表現が可能になりました。\n"
"Netty4プロデューサーがリモートサーバーに接続する際、完全に非同期になるように改善しました。\n"
"改良されました。\n"
"Websocketコンポーネントは、Websocketチャンネルに送信する際にタイムアウトを使用して\n"
"Websocketコンポーネントは、Websocketチャンネルへの送信時にタイムアウトを使用して\n"
"避けられるようになりました。\n"
"* Hazelcastコンポーネントは\n"
"RoutePolicyを提供するようになりました。\n"
"* Saxonはバージョン9.7にアップグレードされました。\n"
"</rests></routes></camelContext>"

#. type: Title ###
#: upstream/content/releases/release-2.18.0.md:189
#, fuzzy, no-wrap
msgid "Resolved Issues"
msgstr "解決した問題"

#. type: Plain text
#: upstream/content/releases/release-2.18.0.md:250
#, fuzzy, no-wrap
msgid ""
"* Fixed Bean component to avoid ambiguous error for\n"
"classes that extends generic interface and calling which could lead to\n"
"falsely duplicate methods (due Java type erasure inserts bridge\n"
"methods) \n"
"* Fixed splitting using tarfile could cause OOME if splitting big files\n"
"which was mistakenly loaded into memory. Now we work on the tar stream\n"
"directly.\n"
"* Fixed Netty HTTP\n"
"and Netty4 HTTP issue when not specifying a port\n"
"number then port 80 would not be used but an error about port -1 is not\n"
"allowed.\n"
"* Fixed Swagger Java when using property\n"
"placeholders in Rest DSL could cause invalid\n"
"parameters to be included that was from the placeholder.\n"
"* The `threads` EIP now lets Error\n"
"handling in Camel perform redeliveries if the thread pool would\n"
"otherwise reject accepting the task. This allows the error handler to\n"
"perform redeliveries to attempt to put the task on the thread pool\n"
"queue, or eventually move the message to a dead letter queue etc.\n"
"* Fixed Rest DSL adding empty header if specifying a\n"
"non required query parameter that has no default value assigned.\n"
"* Fixed doWhile loop which could potentially loop\n"
"forever.\n"
"* Fixed a NPE in Zookeeper consumer if no zookeeper\n"
"node path was set\n"
"* When using continued with onException then\n"
"dead letter channel endpooint should not be invoked.\n"
"* Fixed Error Handler to not log exceptions\n"
"when using `continued(true)` by default.\n"
"* Fixed so using shareUnitOfWork would now also call\n"
"specialized `AggregationStrategy` for onTimeout, onCompletion etc.\n"
"* Fixed Jetty consumer incorrectly handle\n"
"multipart/form data not being mapped as attachments on the Camel\n"
"Message.\n"
"* Fixed Netty4 HTTP may fail reading the http\n"
"content from the raw netty stream if the Exchange was routed\n"
"asynchronously.\n"
"* Fixed Netty4 HTTP leak ByteBuf's on the\n"
"producer side which was not released in all corner cases before they may\n"
"be gargage collected. \n"
"* Fixed Dozer not able to use variables in mapping\n"
"files when using OSGi.\n"
"* Fixed a potential dead-lock when doing request/reply\n"
"over JMS and requests are timing out concurrently and\n"
"continued routing the exchanges are calling another JMS\n"
"endpoint that is also doing request/reply which also timeout. \n"
"* Fixed Load Balancer EIPs to support\n"
"using _any_ property placeholder\n"
"using the *prop:* prefix.\n"
"* Fixed context scoped OnCompletion would not\n"
"stop/shutdown its processors when CamelContext is being shutdown. \n"
"* Fixed memory leak in Routing Slip when the\n"
"slip routes to certain kind of Camel components.\n"
"* Fixed SQL Component query parameter mis-match\n"
"issue when using IN queries together with other named parameters.\n"
"* Fixed a memory leak with CXF when continuation was\n"
"expired could cause Camel message not to be unregisteted from in-flight\n"
"registry.\n"
"* Fixed a preformance regression when using `camel-jaxb`\n"
msgstr ""
"一般的なインターフェイスを拡張したクラスを呼び出した際に、曖昧なエラーが発生しないように修正しました。\n"
"ジェネリック・インターフェイスを拡張したクラスが、誤って重複したメソッドを呼び出す\n"
"誤って重複したメソッドが発生する可能性があります。\n"
"メソッドを挿入するため）。) \n"
"大きなファイルを分割する際に、メモリに誤って読み込まれた OOME が発生する可能性があったため、修正しました。\n"
"を誤ってメモリに読み込んでしまうことがありました。現在は tar ストリームを直接処理しています。\n"
"を直接実行するようになりました。\n"
"固定 Netty HTTP\n"
"とNetty4 HTTPの問題を修正しました。\n"
"ポート番号が指定されていない場合、ポート80は使用されず、ポート-1は許可されていないというエ ラーが発生します。\n"
"許されません。\n"
"* Rest DSLでプロパティのプレースホルダーを使用する際に、Swagger Javaを修正しました。\n"
"Rest DSLでプロパティのプレースホルダーを使用すると、無効な\n"
"パラメータが含まれてしまうことがありました。\n"
"* `threads` EIPで、Camelのエラー処理が再送を行うようになりました。\n"
"スレッドプールがタスクの受け入れを拒否する場合に、Camelのエラー処理で再配送を実行できるようになりました。\n"
"スレッドプールがタスクの受け入れを拒否した場合に、Camelのエラーハンドリングが再配送を実行できるようになりました。これにより、エラーハンドラが\n"
"タスクをスレッドプールのキューに入れたり、最終的にメッセージを移動させたりするために再配送を行うことができます。\n"
"タスクをスレッドプールのキューに入れようとしたり、最終的にメッセージをデッドレターキューなどに移動させたりするために、エラーハンドラが再配送を行うことができます。\n"
"* Fixed Rest DSL adding empty header if specified a non required query parameter which has no default to have it's neck.\n"
"デフォルト値が割り当てられていない必須ではないクエリパラメータを指定した場合、空のヘッダを追加するように修正しました。\n"
"* 永遠にループする可能性のあるdoWhileループを修正しました。\n"
"を修正しました。\n"
"Zookeeper コンシューマで zookeeper のパスが設定されていない場合の NPE を修正しました。\n"
"ノードのパスが設定されていない場合の Zookeeper コンシューマの NPE を修正\n"
"onException を継続して使用した場合\n"
"デッドレターチャネルのendpoointを実行しないようにしました。\n"
"例外を記録しないようにエラーハンドラを修正しました。\n"
"エラーハンドラを修正しました。\n"
"* shareUnitOfWork を使用すると、特化した `AggregationStrategy` も呼び出すように修正しました。\n"
"shareUnitOfWorkを使用すると、onTimeoutやonCompletionなどに特化した`AggregationStrategy`を呼び出すように修正しました。\n"
"* Jettyコンシューマーが\n"
"Camel Messageでmultipart/formデータが添付ファイルとしてマッピングされていないことを\n"
"メッセージ\n"
"* Fixed Netty4 HTTP may fail read the http\n"
"コンテンツの読み取りに失敗することがあります。\n"
"非同期にルーティングされた場合、生のnettyストリームからのhttpコンテンツの読み取りに失敗することがありました。\n"
"Netty4 HTTPのリークByteBufがプロデューサー側にあることを修正しました。\n"
"プロデューサー側のByteBufのリークは、すべてのコーナーケースでリリースされていません。\n"
"ージが収集される前にすべてのコーナーケースでリリースされていませんでした。 \n"
"OSGiを使用している場合、マッピングファイルで変数を使用できないように\n"
"ファイルで変数を使用できないように修正しました。\n"
"JMS上でリクエスト/リプライを行う際にデッドロックが発生する可能性があることを修正しました。\n"
"JMS上でリクエスト/リプライを行う際に、リクエストが同時にタイムアウトしてしまい\n"
"JMS上でリクエスト/リプライを行う際に、リクエストが同時にタイムアウトしたり、交換が別のJMS\n"
"エンドポイントを呼び出しています。 \n"
"ロードバランサーのEIPを固定し、サポートするようにしました。\n"
"任意のプロパティプレースホルダーの使用\n"
"ロードバランサーのEIPを、*prop:*のプレフィックスを使用した _any_ property placeholderをサポートするように修正しました。\n"
"ロードバランサーのEIPを修正しました。\n"
"CamelContextがシャットダウンされているときに、そのプロセッサを停止/シャットダウンしないように修正しました。 \n"
"* ルーティングスリップが特定の種類の CamelContext にルーティングする際のメモリリークを修正しました。\n"
"* 特定のCamelコンポーネントにルーティングするスリップのメモリリークを修正しました。\n"
"SQLコンポーネントのクエリパラメータのミスマッチを修正しました。\n"
"INクエリを他の名前付きパラメータと一緒に使用した場合の問題を修正しました。\n"
"継続が期限切れの場合、CXFでのメモリリークを修正しました。\n"
"継続時間が切れたときにCXFでメモリリークが発生し、飛行中のレジストリからCamelメッセージが解除されないことがありました。\n"
"レジストリを修正しました。\n"
"CAMEL-JAXB`を使用した際のパフォーマンスの低下を修正しました。\n"
