# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-05-18 09:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: preview
#: upstream/content/releases/release-2.20.0.md:1
#, fuzzy, no-wrap
msgid "Major release for 2.20.x"
msgstr "2.20.xのメジャーリリース"

#. type: YAML Front Matter: title
#: upstream/content/releases/release-2.20.0.md:1
#, fuzzy, no-wrap
msgid "Release 2.20.0"
msgstr "リリース2.20.0"

#. type: Plain text
#: upstream/content/releases/release-2.20.0.md:17
#, fuzzy, no-wrap
msgid ""
"Welcome to the 2.20.0 release which resolved over 550 issues including\n"
"new features, improvements and bug fixes.\n"
msgstr ""
"550件以上の問題を解決した2.20.0リリースへようこそ。\n"
"新機能、改善、バグフィックスを含む550以上の問題を解決した\n"

#. type: Plain text
#: upstream/content/releases/release-2.20.0.md:101
#, fuzzy, no-wrap
msgid ""
"* Support for Java 9 as a technical preview. Official support for Java 9\n"
"will be forthcoming in the following releases. (source code builds and\n"
"tests on a Java 9 JVM). \n"
"* Many internal optimisations in the Camel routing engine, such as\n"
"reducing thread contention when updating JMX statistics, reducing\n"
"internal state objects to claim less memory, and reducing the number of\n"
"allocated objects to reduce overhead on GC etc, and much more. \n"
"* Camel Spring Boot now supports referring to\n"
"bean's (lookup in Spring Boot) by their id names in the configuration\n"
"files (application.properties|yaml file) when you configure any of the\n"
"Camel starter components.\n"
"* Camel Spring Boot now also supports using\n"
"Spring (auto) configuration to configure CamelContext when using Spring\n"
"XML files with `<camelContext>`. \n"
"* Worked to make Apache Camel more ready and compatible with the\n"
"upcoming Spring Boot 2 and Spring Framework 5. Officially support for\n"
"these is expected in Camel 2.21 release.\n"
"* The JMS component now includes JMS 2.0 functionality to\n"
"use shared (durable and non-durable) topic.\n"
"* The\n"
"Camel Maven Plugin can now validate for duplicate route ids in your source\n"
"code.\n"
"* Splitted Twitter component into 4, now\n"
"directmessage, seach, streaming and timeline has its own endpoint and\n"
"scheme.\n"
"See documentation for\n"
"more details\n"
"* Introduced `HeadersMapFactory` SPI which allows to plugin different\n"
"implementations, or to use case sensitive maps that are faster than the\n"
"default.\n"
"* Allow Kafka consumer to break on first unhandled\n"
"exception, sync the offset from last known good, and then re-connect\n"
"after one timeout cycle, to restart consuming again. This avoids loosing\n"
"the failed message, but retry it again on either this consumer, or\n"
"another consume which was re-balanced by Kafka. This requires to be\n"
"turned on with the new option breakOnFirstError which can be set on both\n"
"component or endpoint level.\n"
"* Starting and stoping the CamelContext when used with Spring framework\n"
"(SpringCamelContext) was revised to ensure that the Camel context is\n"
"started last - when all resources should be available, and stopped first\n"
"- while all resources are still available\n"
"* The SQL Stored Procedure now supports\n"
"specifying custom types as FQN classnames and scale in numeric values.\n"
"* Using Camel with Spring now supports calling\n"
"Bean by their FQN name and let Spring instantiate the\n"
"bean using auto-wired constructor's as opposed to only supporting a\n"
"no-arg constructor. \n"
"* Using Camel with Spring Boot can now easily\n"
"filter Java RouteBuilder routes via ANT-path pattern style to either\n"
"include or exclude class names, which can be configured using Spring\n"
"configuration properties.\n"
"* The Wire Tap EIP can now be configured to use\n"
"static endpoint uri instead of being dynamic evaluated via the\n"
"Simple language. \n"
"* The Wire Tap EIP will now complete any inflight\n"
"wire tapped exchanges while shutting down to give them time to complete\n"
"graceful.\n"
"* The JSonPath can now split and write each row as a\n"
"string value (JSon format) instead of using a Map/POJO type with the new\n"
"writeAsString option.\n"
"* The POJO Consuming Consume annotation on\n"
"POJO classes now support a predicate (using simple language) to filter\n"
"the message. See the camel-example-spring-boot-pojo for more.\n"
"* The internal JSon parser that is used by camel-catalog and runtime\n"
"camel-catalog (from camel-core) now embeds a simple-json v2 parser which\n"
"means it can parse any kind of json formatted document (before it was\n"
"confined to its own dense format)\n"
"* Infinispan, Ehcache and Hazelcast caches can automatically discover\n"
"cache managers in spring-boot\n"
"* Introduced an experimental _Health Checks SPI_ that can be leveraged\n"
"in in cloud environments to detect non healthy contexts.\n"
"* Introduced an experimental _Cluster SPI_ for high availability\n"
"contexts, out of the box Camel supports: atomix, consul, file,\n"
"kubernetes and zookeeper as underlying clustering technologies through\n"
"the respective components.\n"
"* Introduced an experimental _Route Controller SPI_ which is aimed to\n"
"provide more fine-grained control of routes, out of the box Camel\n"
"provides the following implementations:\n"
"* _SupervisingRouteController_ which delays startup of the routes after\n"
"the camel context is properly started and attempt to restart routes that\n"
"have not been starter successfully\n"
"* _ClusteredRouteController_ which leverages _Cluster SPI_ to start\n"
"routes only when the context is elected as leader\n"
msgstr ""
"テクニカルプレビューとしてのJava 9のサポート。Java 9の公式サポートは\n"
"の公式サポートは、次のリリースで予定されています。(ソースコードのビルドと\n"
"ソースコードのビルドとテストはJava 9のJVM上で行われます）。) \n"
"Camelのルーティングエンジンでは、以下のような内部最適化が行われています。\n"
"JMXの統計情報を更新する際のスレッドの競合を減らし、内部のステートオブジェクトを減らして\n"
"内部のステートオブジェクトを減らしてメモリの消費を抑えたり、割り当てられたオブジェクトの数を減らして\n"
"割り当てられたオブジェクトの数を減らしてGCのオーバーヘッドを削減するなど、多くの内部最適化が行われています。 \n"
"* Camel Spring Bootは、以下の項目の参照をサポートしました。\n"
"設定ファイル(application.properties|yam)内のid名によるBeanの参照(Spring Bootでのルックアップ)をサポートしました。\n"
"設定ファイル(application.properties|yamlファイル)でのid名によるBeanの参照をサポートしました。\n"
"Camelスターターコンポーネントのいずれかを設定する際に、設定ファイル（application.properties|yamlファイル）でID名によるBeanの参照をサポートしました。\n"
"Camel Spring Bootでは、以下もサポートしています。\n"
"Spring (自動)設定を使ってCamelContextを設定することもサポートしました。\n"
"XMLファイルに<camelContext>``. \n"
"* 次期Spring Boot 2とSpring Framework 5に向けて、Apache Camelの準備と互換性を高めるための作業を行いました。\n"
"次回のSpring Boot 2とSpring Framework 5との互換性を高めるために作業しました。公式にこれらをサポートするのは\n"
"公式にはCamel 2.21のリリースでサポートされる予定です。\n"
"JMSコンポーネントにJMS2.0の機能が追加されました。\n"
"JMSコンポーネントにJMS2.0の機能が追加され、共有（durableおよびnon-durable）トピックを使用できるようになりました。\n"
"JMSコンポーネント\n"
"Camel Mavenプラグインは、ソースコード中のルートIDが重複していないかどうか検証できるようになりました。\n"
"コード\n"
"* Twitterコンポーネントを4つに分割しました。\n"
"directmessage、seach、streaming、timelineがそれぞれのエンドポイントとスキームを持つようになりました。\n"
"スキームを持つようになりました。\n"
"詳細はドキュメントをご覧ください。\n"
"詳細はドキュメントをご覧ください。\n"
"* SPIに`HeadersMapFactory`を導入しました。これにより、異なる実装をプラグインしたり\n"
"の実装をプラグインしたり、デフォルトよりも高速な大文字小文字を区別するマップを使用したりすることができます。\n"
"デフォルトでは\n"
"* Kafkaコンシューマが最初の未処理例外でブレークすることを許可しました。\n"
"Kafkaコンシューマーは、最初の処理不能例外で中断し、最後に確認された良好な状態からのオフセットを同期して\n"
"タイムアウトの1サイクル後に再接続して、消費を再開できるようにします。これにより、失敗したメッセージが失われることはありませんが\n"
"失敗したメッセージを失うことはありませんが、このコンシューマ、または\n"
"Kafkaによって再バランスされた別の消費者のいずれかで再試行します。この機能を利用するには\n"
"コンポーネントとエンドポイントの両方で設定可能な新しいオプション breakOnFirstError でオンにする必要があります。\n"
"コンポーネントまたはエンドポイントの両方のレベルで設定できます。\n"
"* Spring フレームワークで使用されている CamelContext (SpringCamelContext) の起動と停止が\n"
"(SpringCamelContext)を使用する際の CamelContext の起動と停止は、CamelContext が最後に起動されるように修正されました。\n"
"すべてのリソースが利用可能なときに最後に開始され、すべてのリソースがまだ利用可能なときに最初に停止されるように修正されました。\n"
"- すべてのリソースが利用可能な状態で最初に停止するように修正されました。\n"
"SQL ストアドプロシージャが以下をサポートしました。\n"
"SQLストアドプロシージャでは、カスタムタイプをFQNクラス名で指定したり、数値でスケールすることができるようになりました。\n"
"* SpringでのCamelの使用で、FQN名と数値でのBean呼び出しをサポートしました。\n"
"BeanをFQN名で呼び出して、Springが自動配線のコンストラクタを使って\n"
"自動配線されたコンストラクタを使用してBeanをインスタンス化できるようになりました。\n"
"自動配線のコンストラクタを使用してBeanをインスタンス化できるようになりました。 \n"
"* Spring BootでCamelを使用すると、次のことが簡単にできるようになりました。\n"
"Java RouteBuilderのルートをANT-pathパターンスタイルでフィルタリングして\n"
"クラス名を含むか含まないかのANT-pathパターンスタイルによるJava RouteBuilderルートのフィルタリングが簡単にできるようになり、これはSpringの\n"
"の設定プロパティで設定できます。\n"
"* Wire TapのEIPは、Springの構成プロパティを使用して設定することができます。\n"
"シンプルな言語を使って動的に評価される代わりに、静的なエンドポイントURIを使用するように設定できるようになりました。\n"
"シンプルな言語です。 \n"
"* Wire Tap EIPは、シャットダウンしている間に、機内でワイヤータップされた交換を完了するようになりました。\n"
"ワイヤータップEIPは、機内でのワイヤータップ交換をシャットダウン中に完了するようになりました。\n"
"graceful。\n"
"JSonPathでは、各行を分割して文字列値（JSonフォーマット）として書き込むことができるようになりました。\n"
"各行を分割して文字列値（JSon形式）として書き込むことができるようになりました。\n"
"writeAsStringオプションが追加されました。\n"
"POJOクラスのConsuming Consumeアノテーションは、今回の変更により、次のようになりました。\n"
"POJOクラスのConsumeアノテーションは、メッセージをフィルタリングする述語（簡単な言語を使用）をサポートするようになりました。\n"
"メッセージをフィルタリングするための述語がサポートされました。詳細は camel-example-spring-boot-pojo を参照してください。\n"
"* camel-catalogとランタイムで使用される内部JSonパーサー。\n"
"camel-catalog (camel-coreから)はsimple-json v2パーサーを組み込みました。\n"
"つまり、あらゆる種類のjsonフォーマットのドキュメントを解析できるようになりました。\n"
"密なフォーマットに限定されていました)\n"
"* Infinispan、Ehcache、Hazelcastのキャッシュは、Spring-bootのキャッシュマネージャを自動的に発見できます。\n"
"spring-bootのキャッシュマネージャー\n"
"クラウド環境で非健全な状態を検出するために活用できる実験的な_Health Checks SPI_を導入しました。\n"
"クラウド環境で活用できる実験的な_Health Checks SPI_を導入し、健全でないコンテキストを検出する。\n"
"高可用性のための実験的な_Cluster SPI_を導入しました。\n"
"Camelは、 atomix、 consul、 file、 kubernetes、 zookeeperをサポートしています。\n"
"kubernetes、zookeeperなどのクラスタリング技術をそれぞれのコンポーネントでサポートしています。\n"
"それぞれのコンポーネントでサポートしています。\n"
"実験的な _Route Controller SPI を導入しました。これは以下を目的としています。\n"
"Camelは、以下の実装を提供しています。\n"
"は以下のような実装を提供しています。\n"
"* _SupervisingRouteController_ は、camel コンテキストが適切に起動された後に、ルートの起動を遅延させます。\n"
"Camelのコンテキストが適切に起動された後にルートの起動を遅らせ、起動に成功しなかったルートの再起動を試みます。\n"
"再起動を試みる。\n"
"* _ClusteredRouteController_: _Cluster SPI_を利用して、コンテクストが\n"
"コンテキストがリーダーに選ばれたときにのみルートを開始する\n"
"</camelContext>"

#. type: Plain text
#: upstream/content/releases/release-2.20.0.md:103
#, fuzzy, no-wrap
msgid "Fixed these issues\n"
msgstr "以下の問題を修正しました。\n"

#. type: Plain text
#: upstream/content/releases/release-2.20.0.md:158
#, fuzzy, no-wrap
msgid ""
"* Fixed a infinitive recursion in Camel's link:error-handler.html[Error\n"
"Handler] when an onException was routing to another route using direct\n"
"endpoint and this route would throw a new exception that would circle\n"
"back to the same onException or at a later point, which will cause an\n"
"endless recursion.\n"
"* Fixed a potential issue with masking password from URI using RAW(xxx)\n"
"would reveal part of the password if the password contains a &\n"
"character.\n"
"* The Restlet component is now internally using curly\n"
"brackets for its uri patterns instead of regular parentheses so it works\n"
"similar to the other REST component and as Restlet framework itself does\n"
"* Fixed Hystrix EIP having wrong default for\n"
"circuitBreakerForceClose when using camel-hystrix-starter with Spring\n"
"Boot. The default should be false and not true\n"
"* Fixed Hystrix EIP when failing and running\n"
"fallback not signaling to Hystrix itself so it can keep state of the\n"
"failure and react accordingly to run in half-open mode as well.\n"
"* Fixed MDC logging loosing route id after\n"
"calling a direct route from within a transacted route\n"
"* Fixed a regression with Bean component\n"
"and Simple language OGNL expressions causing ambiguous method\n"
"call exception when calling method implemented by super class when\n"
"method is defined by interface and abstract class\n"
"* Fixed Rest DSL (server side) not returning\n"
"response on all valid uri paths when clients call using a HTTP OPTIONS\n"
"request\n"
"* Fixed Rest producer not using HTTP method (verb such\n"
"as PUT) from the endpoint uri when calling a remote REST service\n"
"* Fixed Timer routes to shutdown more graceful and\n"
"allow pending tasks to complete while they are in-flight.\n"
"* Fixed configuring Rest DSL via\n"
"application.properties|yaml in Spring Boot not\n"
"working. \n"
"* Fixed Simple\n"
"Language to add support negative numbers(without single or double\n"
"quotes) in predicates\n"
"* Fixed configuring Rest DSL in Spring Boot\n"
"application.properties / yaml for properties to data format, component,\n"
"api, cors etc to use a map structure and make it work.\n"
"* Fixed configuring Rest DSL using property\n"
"placeholders in the path parameters such as the defaultValue.\n"
"* Fixed an issue with parallel processing (in non-streaming mode) in\n"
"some EIPs may cause CPU burning cycles while waiting for pending tasks\n"
"to complete or timeout.\n"
"* Fixed an issue with copying streams could block forever due IBM\n"
"application server would mistakenly return 0 instead of -1 to indicate\n"
"EOL for an empty stream. \n"
"* Fixed an issue with making JMS and SJMS\n"
"components work with ActiveMQ Artemis that would otherwise causes a\n"
"ClassCastException\n"
"* Fixed RabbitMQ component to better recover connection if\n"
"exchange/queue has been deleted manually on the broker.\n"
"* Fixed Websocket component wasn't working with\n"
"returning static content\n"
msgstr ""
"Camelのlink:error-handler.html[Error]で不定詞の再帰を修正。\n"
"ハンドラー]で、onExceptionがダイレクトエンドポイントを使って別のルートにルーティングされているときに\n"
"このルートが新しい例外を投げると、同じonExceptionに戻ってくるか、後の時点で\n"
"同じonExceptionに戻ってきたり、後から戻ってきたりして、無限の再帰が発生してしまう。\n"
"無限の再帰を引き起こします。\n"
"RAW(xxx)を使用してURIからパスワードをマスキングする際に発生していた問題を修正しました。\n"
"を使用してURIからパスワードをマスクする際に、パスワードに &amp;\n"
"文字が含まれている場合に、パスワードの一部が表示される問題を修正しました。\n"
"RAW(xxx)を使用してURIからパスワードをマスクすると、パスワードに&amp;文字が含まれている場合、パスワードの一部が表示されてしまう問題を修正しました。\n"
"括弧の代わりに、URIパターンに大括弧を使用しています。\n"
"他のRESTコンポーネントやRestletフレームワーク自体がそうであるように動作します。\n"
"* Fixed Hystrix EIP having wrong default for\n"
"Spring Bootでcamel-hystrix-starterを使用しているときに、circuitBreakerForceCloseの誤ったデフォルトを持つHystrix EIPを修正しました。\n"
"のデフォルトが間違っていたのを修正しました。デフォルトはfalseで、trueではありません。\n"
"* Hystrix EIPが失敗して実行するときの修正\n"
"フォールバックがHystrix自身にシグナリングしないようにしました。\n"
"失敗の状態を維持し、ハーフオープンモードでも実行できるように対応しました。\n"
"トランザクション内からダイレクトルートを呼び出した後、MDCのロギングでルートIDが失われる問題を修正しました。\n"
"トランザクテッド・ルート内からダイレクト・ルートを呼び出した後にルートIDを失ったMDCのロギングを修正しました。\n"
"Beanコンポーネントに関するリグレッションを修正しました。\n"
"とシンプルな言語のOGNL式で、スーパーで実装されたメソッドを呼び出したときに、曖昧なメソッド\n"
"メソッドがインターフェイスや抽象クラスで定義されている場合に、スーパークラスで実装されたメソッドを呼び出すと\n"
"メソッドがインターフェイスと抽象クラスで定義されている場合に、スーパークラスで実装されたメソッドを呼び出すと、曖昧なメソッド呼び出し例外が発生する現象を修正しました。\n"
"Rest DSL（サーバー側）が、すべての有効なURIパスでレスポンスを返さない問題を修正\n"
"HTTP OPTIONSを使用してクライアントが呼び出したときに、すべての有効なURIパスでレスポンスを返さないように修正しました。\n"
"リクエスト\n"
"* Fixed Rest Producer not using HTTP method (verb such as PUT) from endpoint.\n"
"PUTなどの動詞）を使用しないように修正しました。\n"
"タイマールートを修正し、より緩やかなシャットダウンと\n"
"タイマールートを修正しました。\n"
"* Rest DSLの設定を\n"
"application.properties|yamlでRest DSLを設定しても、Spring Bootでは\n"
"働かないことを修正しました。 \n"
"シンプル\n"
"述語に負の数（シングルまたはダブルクォートなし）をサポートするように\n"
"述語に負の数（シングルまたはダブルクォートなし）をサポートするように修正しました。\n"
"Spring BootのRest DSLの設定を修正しました。\n"
"application.properties / yamlでデータフォーマット、component.api、chorなどのプロパティをマップ構造にして動作するようにした。\n"
"data format, component, api, corsなどのプロパティをSpring Bootのapplication.properties/yamlで設定する際、マップ構造を使用して動作するように修正しました。\n"
"プロパティを使用したRest DSLの設定を修正しました。\n"
"プレースホルダーを使用したRest DSLの設定を修正しました（defaultValueなど）。\n"
"* 一部のEIPにおける並列処理（非ストリーミングモード）で、CPUの焼き付きが発生する問題を修正しました。\n"
"一部のEIPでは、保留中のタスクの完了やタイムアウトを待っている間に、CPUの燃焼サイクルが発生する可能性があります。\n"
"タイムアウトになることがありました。\n"
"ストリームをコピーすると、IBMアプリケーション・サーバーが誤って0を返すため、永遠にブロックされる問題を修正しました。\n"
"アプリケーションサーバーが、空のストリームのEOLを示すために-1ではなく0を誤って\n"
"ストリームをコピーすると永遠にブロックされる問題を修正しました。 \n"
"JMS および SJMS コンポーネントを ActiveMQ Artemis で動作させる際の問題を修正しました。\n"
"コンポーネントをActiveMQ Artemisで動作させる際に発生していた\n"
"ClassCastException\n"
"JMSとSJMSコンポーネントをActiveMQ Artemisで動作させる際に、ClassCastExceptionが発生する問題を修正しました。\n"
"ブローカ上で交換/キューが手動で削除された場合に、接続を回復するように修正しました。\n"
"Websocketコンポーネントが、静的コンテンツを返す\n"
"静的コンテンツを返す\n"

#. type: Plain text
#: upstream/content/releases/release-2.20.0.md:160
#, fuzzy, no-wrap
msgid "Important changes to consider when upgrading\n"
msgstr "アップグレード時に考慮すべき重要な変更点\n"

#. type: Bullet: '* '
#: upstream/content/releases/release-2.20.0.md:210
#, fuzzy, no-wrap
msgid "Maven 3.3.3 or newer is required to build the project\n"
msgstr "プロジェクトをビルドするには、Maven 3.3.3以降が必要です。\n"

#. type: Plain text
#: upstream/content/releases/release-2.20.0.md:210
#, fuzzy, no-wrap
msgid ""
"* camel-dropbox - upgraded to v2 api as v1 is EOL and no longer possible\n"
"to use with dropbox. The v2 upgrade was not straightforward so there can\n"
"be backward compatible issues, which is out of our hands.\n"
"* camel-infinispan - the result is not more set in the\n"
"CamelInfinispanOperationResult header but in the in body. To change this\n"
"behavior you can set the header CamelInfinispanOperationResultHeader\n"
"with the name of the header that should contains the result or with the\n"
"resultHeader uri option\n"
"* camel-infinispan - the uri option _command_ has been deprecated and\n"
"replaced by _operation_ for consistency\n"
"* camel-infinispan - the commands are now int the short form PUT, GET\n"
"etc. old operation names like CamelInfinispanOperationPut,\n"
"CamelInfinispanOperationGet etc have been deprecated.\n"
"* camel-undertow - matchOnUriPrefix option is defaulted to be FALSE in\n"
"order to make it consistent with other components like Camel HTTP\n"
"components.\n"
"* Splitted Twitter component into 4, now\n"
"directmessage, seach, streaming and timeline has its own endpoint and\n"
"scheme.\n"
"* RuntimeEndpointRegistry is no longer in extended mode by default. To\n"
"use that you need to set management statistics level to Extended\n"
"explicit.\n"
"* There is no RuntimeEndpointRegistry in use by default. You need to\n"
"explicit configure a registry to be used, or turn it on via management\n"
"agent, or set the statics level to extended mode.\n"
"* Camel with Spring XML routes will no longer register endpoints in the\n"
"Spring registry from Camel routes where `<from>` or `<to>` have endpoints\n"
"assigned with an explicit id attribute. The\n"
"option registerEndpointIdsFromRoute can be set to true on `<camelContext>`\n"
"to be backwards compatible. However this registration is deprecated,\n"
"instead you should use `<endpoint>` to register Camel endpoints with id's\n"
"in Spring registry.\n"
"* camel-spring-dm has been removed as it was not working properly anyway\n"
"and was deprecated some releases ago. For XML DSL with OSGi use\n"
"camel-blueprint instead.\n"
"* Copying streams in IOHelper from came-core now regard EOL of data if\n"
"the first read byte is zero to work around issues on some application\n"
"servers like IBM WebSphere. This can be turned off by setting JVM system\n"
"property \"camel.zeroByteEOLEnabled=false\".\n"
"* The camel-jms component now dependes by default on the JMS 2.0 API\n"
"(geronimo-jms_2.0_spec) instead of JMS 1.1 API (geronimo-jms_1.1_spec).\n"
"However camel-jms works at runtime with both JMS 1.1 or 2.0 specs so\n"
"include the JMS spec JARs of your choice.\n"
"* camel-kura upgraded to newer OSGi API version\n"
"* camel-stomp uses the destination as-is, where as before it would\n"
"replace all slash characters with colon. But according to the STOMP spec\n"
"the destination should be used as-is, and is broker specific.\n"
"* camel-ignite is updated from using Ignite version 1.9.x to 2.2.x\n"
msgstr ""
"camel-dropbox - v1 は EOL であり、dropbox を使用することができなくなったため、v2 api にアップグレードしました。\n"
"アップグレードしました。v2へのアップグレードは簡単ではなく、後方互換性の問題があるかもしれません。\n"
"v2へのアップグレードは簡単ではなく、後方互換性の問題が発生する可能性があります。\n"
"* camel-infinispan - 結果は、より多くのセットではなく\n"
"CamelInfinispanOperationResult ヘッダーではなく、ボディで設定されます。この動作を変更するには\n"
"この動作を変更するには、CamelInfinispanOperationResultHeaderというヘッダーを\n"
"に、結果を含むヘッダの名前を設定するか、または\n"
"resultHeader uri オプション\n"
"* camel-infinispan - uri オプションの _command_ は廃止され、一貫性を保つために _operation_ に置き換えられました。\n"
"一貫性を保つために _operation_ に置き換えられました。\n"
"* camel-infinispan - コマンドは、PUT, GET, などの短い形式になりました。\n"
"などの古い操作名を使用しています。\n"
"CamelInfinispanOperationPut、CamelInfinispanOperationGetなどの古い操作名は廃止されました。\n"
"* camel-undertow - matchOnUriPrefix オプションは、他のコンポーネントと一貫性を持たせるために、デフォルトで FALSE になります。\n"
"Camel HTTPコンポーネントのような他のコンポーネントとの一貫性を保つために\n"
"コンポーネントを追加しました。\n"
"* Twitterコンポーネントを4つに分割しました。\n"
"directmessage、seach、streaming、timelineがそれぞれのエンドポイントとスキームを持っています。\n"
"スキームを作成しました。\n"
"RuntimeEndpointRegistryは、デフォルトでは拡張モードではなくなりました。これを\n"
"使用するには、管理統計レベルを Extended に設定する必要があります。\n"
"を明示的に設定する必要があります。\n"
"* デフォルトで使用されているRuntimeEndpointRegistryはありません。使用するためには、明示的に\n"
"使用するレジストリを明示的に設定するか、管理エージェントでオンにするか\n"
"エージェントでオンにするか、統計レベルを拡張モードに設定する必要があります。\n"
"* Spring XMLルートを持つCamelは、以下のようにエンドポイントを登録しなくなります。\n"
"* Spring XMLルートを持つCamelは、<from>``または<to>``が明示的なid属性で割り当てられたエンドポイントを持つ</to></from>CamelルートからSpringレジストリにエンドポイントを登録しなくなりました。<from><to>\n"
"が明示的なid属性で割り当てられている場合、CamelのルートからSpringのレジストリにエンドポイントを登録しなくなります。これは\n"
"オプションregisterEndpointIdsFromRouteは、後方互換性を保つために<camelContext>``\n"
"にtrueを設定することで、後方互換性を保つことができます。しかし、この登録は推奨されません。\n"
"代わりに、<endpoint>CamelのエンドポイントをSpringのレジストリにid付きで登録するために ``</endpoint>を使うべきです。<endpoint>\n"
"を使ってSpringのレジストリに登録します。\n"
"* camel-spring-dmは適切に動作していなかったので削除されました。\n"
"いくつかのリリースで非推奨となりました。OSGiでのXML DSLには、代わりに\n"
"camel-blueprint を使用してください。\n"
"* came-core からの IOHelper でのストリームのコピーは、最初の読み取りバイトがゼロの場合、データの EOL を考慮するようになりました。\n"
"IBM WebSphere のようないくつかのアプリケーションサーバーの問題を回避するために\n"
"IBM WebSphere のようないくつかのアプリケーションサーバーの問題を回避するためです。IBM WebSphere のようないくつかのアプリケーションサーバーでの問題を回避するために\n"
"プロパティ \"camel.zeroByteEOLEnabled=false\" を設定することでオフにできます。\n"
"camel-jms コンポーネントは、JMS 2.0 API にデフォルトで依存するようになりました。\n"
"(gerimo-jms_1.1_spec) の代わりに JMS 2.0 API (gerimo-jms_2.0_spec) にデフォルトで依存するようになりました。\n"
"しかし、camel-jms は JMS 1.1 または 2.0 仕様の両方でランタイムに動作します。\n"
"お好みのJMS仕様のJARをインクルードしてください。\n"
"* camel-kura はより新しい OSGi API バージョンにアップグレードされました。\n"
"* camel-stomp は、以前はすべてのスラッシュ文字をコロンに置き換えていたところ、宛先をそのまま使用します。\n"
"すべてのスラッシュ文字をコロンに置き換えます。しかし、STOMPの仕様では\n"
"宛先はそのまま使用されるべきであり、ブローカー固有のものです。\n"
"* camel-ignite は Ignite バージョン 1.9.x から 2.2.x にアップデートされました。\n"
"</endpoint></camelContext></to></from>"
