#!/usr/bin/env bash
set -eu

SCRIPT_DIR=$(cd $(dirname $0); pwd)
L10N_HOME=$(cd $(dirname $SCRIPT_DIR); pwd)
cd $L10N_HOME

source config/l10n-kit.conf

rm -rf $L10N_HOME/translated/$TARGET_LANG
mkdir -p $L10N_HOME/translated
cp -p -R $L10N_HOME/upstream $L10N_HOME/translated/$TARGET_LANG

function po4a-translate() {
    local item=$1
    local format=$2
    shift # $1
    shift # $2

    local relative_file_path=`echo $item | sed -e "s|^upstream\/||"`
    local relative_file_dir=$(dirname $relative_file_path);

    if [ -f "l10n/po/$TARGET_LANG/$relative_file_path.po" ] ; then
        local localized="translated/$TARGET_LANG/$relative_file_path"
        echo "Processing $localized"

        mkdir -p "$L10N_HOME/l10n/po/$TARGET_LANG/$relative_file_dir"
        PERLLIB=vendor/po4a/lib vendor/po4a/po4a-translate --master-charset UTF-8 --localized-charset UTF-8 -f $format $@ --keep 0 --master "upstream/$relative_file_path" --localized $localized --po "l10n/po/$TARGET_LANG/$relative_file_path.po"

        if [ "$format" = "asciidoc" ] || [ "$format" = "text" ] ; then
            # fix po4a handling of list values in YAML Front Matter
            ./bin/fix-yaml-front-matter "$localized"
        fi
    fi
}

for ITEM in `\find upstream/content -name "*.adoc"`; do
    if [ -f $ITEM ] ; then
        po4a-translate $ITEM asciidoc -o tablecells
    fi
done

for ITEM in `\find upstream/content -name "*.md"`; do
    if [ -f $ITEM ] ; then
        # target only specified headers from YAML Front Matter
        po4a-translate $ITEM text -o markdown -o neverwrap -o yfm_keys=title,preview,description -o yfm_skip_array
    fi
done

for ITEM in `\find upstream/layouts -name "*.html"`; do
    if [ -f $ITEM ] ; then
        po4a-translate "upstream/$ITEM" xhtml
    fi
done
